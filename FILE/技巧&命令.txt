======book audio lab======
S700 11-Nov-15
S201 23-Nov-15
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
Good Qcom case owner:
Power-Idle Power -- Madhusudana Tanugundala


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

__android_log_print(ANDROID_LOG_INFO, "ProjectName", "I am : %d/n", n);

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
http://www.vpnonline.org/

 VPN Protocol:  PPTP VPN

US VPN Server IP:  us.vpnonline.org
                            67.212.188.13

UK VPN Server IP:  uk.vpnonline.org
                            77.92.92.133

VPN Username:  vpnonline.org

VPN Password:   freevpn

VPN Bandwidth:  10Mbps Up/Down

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
make: *** No rule to make target 
fatal error: camera_custom_motiontrack.h

frameworks/av/media/libstagefright/Android.mk

sshfs -o cache=yes huchongyang@172.21.7.18:/home/huchongyang ~/zzz

adb reboot edl 或者 adb reboot dload
adb reboot recovery  	//drivers/power/reset/msm-poweroff.c
adb reboot bootloader
adb reboot rtc

看分区信息
cat /proc/mounts

adb shell setprop service.adb.root 1
adb shell setenforce 0

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1


logcat和kernel log同时输出
adb shell logcat -v time -f /dev/kmsg | adb shell cat /proc/kmsg > kernel_logcat.txt
adb shell logcat -v time -f /dev/kmsg | adb shell cat /proc/kmsg | tee kernel_logcat.txt

./scripts/dtc/dtc -I dtb -O dts -o q39.dts arch/arm64/boot/dts/q39.dtb
./scripts/dtc/dtc -I dtb -O dts -o abc.dts arch/arm/boot/dts/s600.dtb
./scripts/dtc/dtc -I dtb -O dts -o abc.dts arch/arm64/boot/dts/qcom/cb09-apq8096-v3.0-pmi8994-cdp.dtb
./scripts/dtc/dtc -I dtb -O dts -o abc.dts arch/arm64/boot/dts/qcom/cb05.dtb
./scripts/dtc/dtc -I dtb -O dts -o abc.dts arch/arm64/boot/dts/qcom/pa726.dtb

/home/q/project/mt6735_cb04/frameworks/av/media/
/home/q/project/2.1_msm8939_q39_s201/frameworks/av/media/
/home/q/project/APQ8096_CB09/frameworks/av/media/mediaserver/



HAL_GPIOINT_137
core/systemdrivers/tlmm/config/msm8953/PlatformIO_CDP.xml:137:    <props name="blsp_spi_cs_n[7]" type="TLMMGpioIdType">{136, 2}</props>

core/systemdrivers/tlmm/config/msm8953/PlatformIO_CDP.xml:138:    <props name="blsp_spi_mosi[7]" type="TLMMGpioIdType">{137, 2}</props>
core/systemdrivers/tlmm/config/msm8953/PlatformIO_MTP.xml:137:    <props name="blsp_spi_cs_n[7]" type="TLMMGpioIdType">{136, 2}</props>
core/systemdrivers/tlmm/config/msm8953/PlatformIO_MTP.xml:138:    <props name="blsp_spi_mosi[7]" type="TLMMGpioIdType">{137, 2}</props>
core/systemdrivers/tlmm/config/msm8953/PlatformIO_RCM.xml:137:    <props name="blsp_spi_cs_n[7]" type="TLMMGpioIdType">{136, 2}</props>
core/systemdrivers/tlmm/config/msm8953/PlatformIO_RCM.xml:138:    <props name="blsp_spi_mosi[7]" type="TLMMGpioIdType">{137, 2}</props>
core/systemdrivers/tlmm/config/msm8953/PlatformIO_QRD.xml:95:    <props name="blsp_spi_cs_n[7]" type="TLMMGpioIdType">{136, 2}</props>
core/systemdrivers/tlmm/config/msm8953/PlatformIO_QRD.xml:96:    <props name="blsp_spi_mosi[7]" type="TLMMGpioIdType">{137, 2}</props>
core/systemdrivers/hwio/hw/msm8953/msmhwioreg.h:74201:#define HWIO_TLMM_MPM_WAKEUP_INT_EN_0_GPIO_137_BMSK                                           0x400000
core/power/mpm/config/asic/8953/MPMIntDevCfgData.c:125:  { MPM_TRIGGER_RISING_EDGE, 137             , MPM_GPIO }, 


Collecting kernel and userspace log in single file:
adb shell logcat -v time -f /dev/kmsg | adb shell cat /proc/kmsg | tee kernel_logcat.txt
adb shell logcat -v time -b all -f /dev/kmsg | adb shell cat /proc/kmsg | tee kernel_logcat.txt

adb logcat ­-v thread
adb shell logcat -v time -f /dev/kmsg | adb shell cat /proc/kmsg | tee zzker_cat.txt


go+rwx为group和other添加权限, owner/group/others 組別, chmod u=rwx,g=rx,o=r filename
chmod  go+rwx . -R

查找并筛选出不含有"xxx"的行
grep -nrs CONFIG_COMPAT . | grep -v "#ifdef" | grep -v "#endif" | grep -v "CONFIG_COMPAT_BRK" | grep -v "if defined"
查找包含qiancheng和cam_idx的行
adb logcat  | grep -E "qiancheng|cam_idx"


tar -zcvf /tmp/etc.tar.gz /etc<==打包后，以 gzip 压缩 
tar -zxvf /tmp/etc.tar.gz

tar -jcvf /tmp/etc.tar.bz2 /etc<==打包后，以 bzip2 压缩

LINUX 后台执行
(ping xxx &)

用文件夹打开
nautilus ./
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
============VI集合 vim==============
1.全词匹配搜索
/\<word\>

2.不保存行尾空格
%s/\s*$//g

3.CTRL+v --> shift+I --> 修改 --> ESC 退出批量编辑模式 
================================
安装jeffy提供的方案
$ sudo apt-get install exuberant-ctags cscope
$ svn checkout http://jeffy-vim.googlecode.com/svn/trunk/ jeffy-vim-read-only 
$ cd jeffy-vim-read-only
$ ./install.sh

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

sudo sshfs -o cache=yes,allow_other server@172.21.1.13:/home/server ~/sshfs_mount


sshfs -o cache=yes liuyang@172.21.1.151:/work/liuyang/ ~/qmyfile
密码3626833131liuyang



ssh -l server 172.21.1.13

远程拷贝
scp xxx@172.21.1.13:/home/server/.ssh/id_rsa.pub .

git push ssh://qiancheng@172.16.6.72:29418/S600/platform/vendor/qcom/proprietary.git HEAD:refs/for/S600

git push ssh://qiancheng@172.16.6.72:29418/S600/kernel/lk.git HEAD:refs/for/S600

git push ssh://qiancheng@172.16.6.72:29418/S600/kernel/msm-3.10.git HEAD:refs/for/S600

git push ssh://qiancheng@172.16.6.72:29418/S600/platform/build.git HEAD:refs/for/S600

git push ssh://qiancheng@172.16.6.72:29418/S600/platform/system/core.git HEAD:refs/for/S600

git push ssh://qiancheng@172.16.6.72:29418/S600/platform/vendor/qcom/s600 HEAD:refs/for/S600

git push ssh://qiancheng@192.167.100.232:29418/Non-HLOS_second.git HEAD:refs/for/8939_L

git push --no-thin ssh://qiancheng@172.16.6.72:29418/MT6735/platform/build.git HEAD:refs/for/MT6735_L

ECALL
git push ssh://qiancheng@172.16.6.72:29418/STA8090 HEAD:refs/for/develop

1使用git format-patch生成所需要的patch:
当前分支所有超前master的提交：
git format-patch -M master
某次提交以后的所有patch:
git format-patch 4e16                --4e16指的是commit名
从根到指定提交的所有patch:
git format-patch                          --root 4e16
某两次提交之间的所有patch:
git format-patch 365a..4e16      --365a和4e16分别对应两次提交的名称
某次提交（含）之前的几次提交：
git format-patch –n 07fe             --n指patch数，07fe对应提交的名称
故，单次提交即为：
git format-patch -1 07fe
git format-patch生成的补丁文件默认从1开始顺序编号，并使用对应提交信息中的第一行作为文件名。如果使用了-- numbered-files选项，则文件名只有编号，不包含提交信息；如果指定了--stdout选项，可指定输出位置，如当所有patch输出到一个文件；可指定-o <dir>指定patch的存放目录；


2应用patch：
先检查patch文件：git apply --stat newpatch.patch
检查能否应用成功：git apply --check  newpatch.patch
打补丁：git am --signoff < newpatch.patch

(使用-s或--signoff选项，可以commit信息中加入Signed-off-by信息)


如果应用patch出现问题：参考git am PATCH 失败的处理方法http://blog.csdn.net/sunnylgz/article/details/7660638









git clean -xdf

 比如，一个典型的git am失败，可能是这样的：
$ git am PATCH
Applying: PACTH DESCRIPTION
error: patch failed: file.c:137
error: file.c: patch does not apply
error: patch failed: Makefile:24
error: libavfilter/Makefile: patch does not apply
Patch failed at 0001 PATCH DESCRIPTION
When you have resolved this problem run "git am --resolved".
If you would prefer to skip this patch, instead run "git am --skip".
To restore the original branch and stop patching run "git am --abort".

正如你所见，如果冲突发生，git只是输出上述信息，然后就停下来。一个小冲突会导致整个patch都不会被集成。

处理这种问题的最简单方法是先使用 git am --abort，然后手动的添加此patch, patch -p1 < PATCH，手动解决掉代码冲突，最后使用 git commit -a 提交代码。但是这样做有个问题就是你会失去PATCH中原本包含的commit信息（比如From，Date，Subject，Signed-off-by等）。应该有一种更聪明的方法。

在 .git/rebase-apply 目录下，存放着相应的补丁文件，名字是"0001" （在更新的git版本中，存放补丁文件的目录名有所改变，这里使用的git版本是 1.7.4.1）。

事实上，你可以使用 git apply 命令打patch（git apply 是git中的patch命令）。如同使用 patch -p1 命令时一样，然后手动解决代码冲突（检视生成的 .rej 文件，与冲突文件比较，修改冲突内容，并最终把文件加入到index中）：

$ git apply PATCH --reject
$ edit edit edit
（译注：根据.rej文件手动解决所有冲突）
$ git add FIXED_FILES
$ git am --resolved

就这么简单！
想多一些解释，好吧。git am 并不改变index，你需要使用 git apply --reject 打patch（保存在 .git/rebase-apply），手动解决代码冲突，（译注：使用 git status 列出所有涉及文件），把所有文件（不仅仅是引起冲突的文件）添加到（git add）index，最后告诉 git am 你已经解决（--resolved）了问题。这样做的好处是你不需要重新编辑commit信息。而且，如果你正在打的是一系列patch（就是说你在打的是多个patch，比如 git am *.patch）你不需要使用 git am --abort，然后又 git am。

tag回退
$ git tag
$ repo forall -c git checkout tagname

$ git format-patch commit号1 commit号2  # 提取2次commit号之间的不同, 并生成patch文件 (commit号可以通过 git log 来查看)
$ git format-patch tag1 tag2            # 提取2次tag之间的不同, 并生成patch文件 (tag可以通过 git tag 来查看)

查看commit与tag的对应关系
git log --decorate

切换分支 切换branch
repo forall -c git checkout -b c01 sim/MSM8996_C01

自定义指令, 结果保存在~/.gitconfig
git config --global alias.t "log --decorate"   //"git t" 就显示commit和tag关系
~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~


======脚本中log输出到logcat=======

shell@android:/system/bin $ log -p e -t 11 000000000
#!/bin/bash
LOG_TAG="qcom-bt-cta"
LOG_NAME="${0}:"

logi ()
{
/system/bin/log -t $LOG_TAG -p e "$LOG_NAME $@"	9
}
logi "8x10 BT CTA test exit......"

=================================



==============Q39================
抓wifi log

修改WCNSS_qcom_cfg.ini如下
vosTraceEnableHDD = 255
vosTraceEnableSME = 255
vosTraceEnablePE = 255

1. 下载之前传的cfg.ini ,用下面的命令替换原有ini文件，
adb shell setprop service.adb.root 1
adb push WCNSS_qcom_cfg.ini /data/misc/wifi/WCNSS_qcom_cfg.ini
重启手机。

2. 下载logmask ，QXDM使用这个logmask抓log，

3.  高通抓sniffer log时，不要设置
filter，他们需要完整的原始数据。

4. 用下面命令
adb shell wpa_cli ifname=p2p0 log_level EXCESSIVE
adb shell wpa_cli ifname=wlan0 log_level EXCESSIVE

5. logcat和kernel log用下面的方法抓：
adb shell logcat -v time -f /dev/kmsg | adb shell cat /proc/kmsg | tee kernel_logcat.txt

注意：抓kernel
log之前先用下面的命令获取root权限和退出SEandroid强制模式：
adb shell setprop service.adb.root 1
adb shell setenforce 0

=================================

查看已连接的AP MAC
iwconfig wlan0  | grep "Access Point"


#iwconfig wlan0
wlan0     Qcom:802.11n  ESSID:"testhome"
          Mode:Managed  Frequency:2.412 GHz  Access Point: 9C:21:6A:94:E6:52
          Bit Rate=36 Mb/s   Tx-Power=16 dBm
          RTS thr=2346 B   Fragment thr=8000 B
          Encryption key:790F-9C4D-70A8-A712-C3F7-AC97-619E-2712 [2]   Security mode:restricted


WIFI:

Change configuration
WCNSS_qcom_cfg.ini is used to configure the feature in the firmware and on the host side. This
document covers all the configurable variables present in the file. See [Q3] and [Q4] for more
information.

How to get the .ini file from the DUT:
1. Turn on the WLAN from the UI.
2. Connect to a USB.
3. In the command window, type "adb root."
4. Type "adb remount."
5. Type "adb pull /etc/firmware/wlan/prima/WCNSS_qcom_cfg.ini."

How to replace the .ini file in the DUT:
1. Turn on the WLAN from the UI.
2. Connect to a USB.
3. In the command window, type "adb root."
4. Type "adb remount."
5. Type "adb push WCNSS_qcom_cfg.ini /etc/firmware/wlan/prima."

How to change the WCNSS firmware:
1. Open a command window.
2. Type "adb root."
3. Type "adb shell."

80-Y0476-4 Rev. A
MAY CONTAIN U.S. AND INTERNATIONAL EXPORT CONTROLLED INFORMATION
Confidential and Proprietary – Qualcomm Atheros, Inc.
8WCNSS Power Measurement Test Procedure
Test Setup
4. Type "mount."
5. Copy the line with /firmware up to "/firmware" = cmd1.
6. Type "mount –o remount,rw cmd1."
7. Type "exit."
8. Type "adb push Firmware-location /firmware/image."
9. Type "adb shell sync."
10. Reboot the phone.

	<fwConfig>
		<skuID>8</skuID>
		<tpcMode2G>3</tpcMode2G>
		<tpcMode5G>3</tpcMode5G>
		<configItem1>0</configItem1>
		<xPA2G>1</xPA2G>
		<xPA5G>1</xPA5G> //0内置PA，1外置PA
		<extPaCtrl0Polarity>0</extPaCtrl0Polarity>
		<extPaCtrl1Polarity>0</extPaCtrl1Polarity>
		<xLNA2G>1</xLNA2G>
		<xLNA5G>1</xLNA5G>
		<xCoupler2G>1</xCoupler2G>
		<xCoupler5G>1</xCoupler5G>
		<xPdet2G>1</xPdet2G>
		<xPdet5G>1</xPdet5G>
		<enableDPD2G>0</enableDPD2G>
		<enableDPD5G>0</enableDPD5G>
		<pdadcSelect2G>1</pdadcSelect2G>
		<pdadcSelect5GLow>1</pdadcSelect5GLow>
		<pdadcSelect5GMid>1</pdadcSelect5GMid>
		<pdadcSelect5GHigh>1</pdadcSelect5GHigh>
		<configItem2>4354</configItem2>
		<configItem3>0</configItem3>
		<configItem4>0</configItem4>
	</fwConfig>


》》》》》》》》》》》》》》》》》》》》》》》》
1、 主机安装bootchart工具

sudo apt-get install bootchart(Ubuntu)

2、  生成支持bootchart的boot.img

export INIT_BOOTCHART=true

make boot.img

烧写boot.img到手机，重启手机

3、  设定bootchart收集信息 的结束时间

adb shell ‘echo 120>/data/bootchart-start’

重启手机。如果需要停止收集信息，可以使用adb shell 'echo 1 > /data/bootchart-stop'。

4、  可以看到在/data/bootchart目录下，生成了下面五个文件

header、kernel_pacct、proc_diskstats.log、proc_ps.log、proc_stat.log

pull到bootchart目录下

5、 在pull出来的bootchart目录下，使用tar czfbootchat.tgz *

6、 设成bootchart.png图表

在Ubuntu下，使用bootchart bootchart.tgz，生成bootchart.png图表。

 根据得到的bootchart.png图表，分析结果。
《《《《《《《《《《《《《《《《《《《《《《《《《《《《《


抓ramdump

CONFIG_MSM_DLOAD_MODE=y 
开启download_mode: echo 1 > /sys/module/restart/parameters/download_mode
或者
echo 1 > ./sys/module/msm_poweroff/parameters/download_mode
手动触发测试：adb shell echo c > /proc/sysrq-trigger



 #mkdir /data/debug
 #mount -t debugfs debugfs /data/debug

/d/ -> /sys/kernel/debug (debugfs)

python ramparse.py --everything  --64-bit -g /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-gdb -n /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-nm  --vmlinux ~/_ramdump/Debug/vmlinux --auto-dump ~/_ramdump/Port_COM50  -o ~/_ramdump/Port_COM50/out/ 


python ramparse.py --everything  --64-bit -g /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-gdb -n /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-nm  --vmlinux /home/q/temp/HHT6B_8939/Debug/vmlinux --auto-dump ~/temp/HHT6B_8939/Port_COM45 -o ~/temp/HHT6B_8939/Port_COM45/out/ 


python ramparse.py --everything  --64-bit -g /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-gdb -n /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-nm  --vmlinux /home/q/temp/s700/Debug/vmlinux --auto-dump /home/q/temp/s700/Port_COM63/ -o /home/q/temp/s700/Port_COM63/out/ 


python ramparse.py --everything  --64-bit -g /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-gdb -n /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-nm  --vmlinux /home/q/temp/HHT6B_8939/Debug/vmlinux --auto-dump /home/q/temp/HHT6B_8939/S700_Randump/Port_COM8_1/ -o /home/q/temp/HHT6B_8939/S700_Randump/Port_COM8_1/out/ 


python ramparse.py --everything  --64-bit -g /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-gdb -n /home/q/project/2.1_msm8939_q39_s201/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.8/bin/aarch64-linux-android-nm  --vmlinux /home/q/temp/HHT6B_8939/vmlinux --auto-dump /home/q/temp/HHT6B_8939/S700_randump_20160322/Port_COM11/ -o /home/q/temp/HHT6B_8939/S700_randump_20160322/Port_COM11/out/ 




source 过代码后
全部dump
aarch64-linux-android-objdump  -Dz -S vmlinux > vm.txt
按行分析：
aarch64-linux-android-addr2line -a ffffffc00082a908 -e vmlinux


<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
file debug log / .c debug
例如,在PCM平台驱动程序中启用日志
echo –n "file msm-pcm-q6-v2.c +p" > /sys/kernel/debug/dynamic_debug/control
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

====================================================================


<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
WIFI:
○ Disable captive_portal
su
settings put global captive_portal_detection_enabled 0
reboot 

 tcpdump抓包并保存成cap文件
首选介绍一下tcpdump的常用参数
tcpdump采用命令行方式，它的命令格式为：
　　tcpdump [ -adeflnNOpqStvx ] [ -c 数量 ] [ -F 文件名 ]
　　　　　　　　　　[ -i 网络接口 ] [ -r 文件名] [ -s snaplen ]
　　　　　　　　　　[ -T 类型 ] [ -w 文件名 ] [表达式 ]

1. tcpdump的选项介绍
　　　-a 　　　将网络地址和广播地址转变成名字；
　　　-d 　　　将匹配信息包的代码以人们能够理解的汇编格式给出；
　　　-dd 　　　将匹配信息包的代码以c语言程序段的格式给出；
　　　-ddd 　　　将匹配信息包的代码以十进制的形式给出；
　　　-e 　　　在输出行打印出数据链路层的头部信息；
　　　-f 　　　将外部的Internet地址以数字的形式打印出来；
　　　-l 　　　使标准输出变为缓冲行形式；
　　　-n 　　　不把网络地址转换成名字；
　　　-t 　　　在输出的每一行不打印时间戳；
　　　-v 　　　输出一个稍微详细的信息，例如在ip包中可以包括ttl和服务类型的信息；
　　　-vv 　　　输出详细的报文信息；
　　　-c 　　　在收到指定的包的数目后，tcpdump就会停止；
　　　-F 　　　从指定的文件中读取表达式,忽略其它的表达式；
　　　-i 　　　指定监听的网络接口；
　　　-r 　　　从指定的文件中读取包(这些包一般通过-w选项产生)；
　　　-w 　　　直接将包写入文件中，并不分析和打印出来；
　　　-T 　　　将监听到的包直接解释为指定的类型的报文，常见的类型有rpc（远程过程
          调用）和snmp（简单网络管理协议；）

当网络出现故障时，由于直接用tcpdump抓包分析有点困难，而且当网络中数据比较多时更不容易分析，使用tcpdump的-w参数+ethereal分析会很好的解决这个问题，具体参数如下：

tcpdump -i eth1 -c 2000 -w eth1.cap

-i eth1 只抓eth1口的数据

-c 2000代表数据包的个数，也就是只抓2000个数据包

-w eth1.cap 保存成cap文件，方便用ethereal分析

抓完数据包后ftp到你的FTP服务器，put一下，然后用ethereal软件打开就可以很直观的分析了

注：有时将.cap文件上传到FTP服务器后，发现用ethreal打开时提示数据包大于65535个，这是你在ftp上传或者下载的时候没有用bin的模式上传的原因。

另：有的网站提示在tcpdump中用-s 0命令，例如 tcpdump -i eth1 -c 2000 -s0 -w eth1.cap，可实际运行该命令时系统却提示无效的参数,去掉-s 0参数即可

例子：

[root@localhost cdr]#tcpdump -i eth0 -t tcp -s 60000 -w diaoxian.cap 
[root@localhost cdr]# tcpdump host 58.240.72.195 -s 60000 -w x.cap

 

tcpdump 的抓包保存到文件的命令参数是-w xxx.cap
抓eth1的包 
tcpdump -i eth1 -w /tmp/xxx.cap 
抓192.168.1.123的包 
tcpdump -i eth1 host 192.168.1.123 -w /tmp/xxx.cap 
抓192.168.1.123的80端口的包 
tcpdump -i eth1 host 192.168.1.123 and port 80 -w /tmp/xxx.cap 
抓192.168.1.123的icmp的包 
tcpdump -i eth1 host 192.168.1.123 and icmp -w /tmp/xxx.cap 
抓192.168.1.123的80端口和110和25以外的其他端口的包 
tcpdump -i eth1 host 192.168.1.123 and ! port 80 and ! port 25 and ! port 110-w /tmp/xxx.cap 
抓vlan 1的包 
tcpdump -i eth1 port 80 and vlan 1 -w /tmp/xxx.cap 
抓pppoe的密码 
tcpdump -i eth1 pppoes -w /tmp/xxx.cap 
以100m大小分割保存文件，超过100m另开一个文件 -C 100m 
抓10000个包后退出 -c 10000 
后台抓包， 控制台退出也不会影响： 
nohup tcpdump -i eth1 port 110 -w /tmp/xxx.cap & 
抓下来的文件可以直接用ethereal或者wireshark打开。 wireshark就是新版的ethereal，程序换名了

首选介绍一下tcpdump的常用参数

tcpdump采用命令行方式，它的命令格式为：
　　tcpdump [ -adeflnNOpqStvx ] [ -c 数量 ] [ -F 文件名 ]
　　　　　　　　　　[ -i 网络接口 ] [ -r 文件名] [ -s snaplen ]
　　　　　　　　　　[ -T 类型 ] [ -w 文件名 ] [表达式 ]

1. tcpdump的选项介绍
　　　-a 　　　将网络地址和广播地址转变成名字；
　　　-d 　　　将匹配信息包的代码以人们能够理解的汇编格式给出；
　　　-dd 　　　将匹配信息包的代码以c语言程序段的格式给出；
　　　-ddd 　　　将匹配信息包的代码以十进制的形式给出；
　　　-e 　　　在输出行打印出数据链路层的头部信息；
　　　-f 　　　将外部的Internet地址以数字的形式打印出来；
　　　-l 　　　使标准输出变为缓冲行形式；
　　　-n 　　　不把网络地址转换成名字；
　　　-t 　　　在输出的每一行不打印时间戳；
　　　-v 　　　输出一个稍微详细的信息，例如在ip包中可以包括ttl和服务类型的信息；
　　　-vv 　　　输出详细的报文信息；
　　　-c 　　　在收到指定的包的数目后，tcpdump就会停止；
　　　-F 　　　从指定的文件中读取表达式,忽略其它的表达式；
　　　-i 　　　指定监听的网络接口；
　　　-r 　　　从指定的文件中读取包(这些包一般通过-w选项产生)；
　　　-w 　　　直接将包写入文件中，并不分析和打印出来；
　　　-T 　　　将监听到的包直接解释为指定的类型的报文，常见的类型有rpc（远程过程
          调用）和snmp（简单网络管理协议；）

当网络出现故障时，由于直接用tcpdump抓包分析有点困难，而且当网络中数据比较多时更不容易分析，使用tcpdump的-w参数+ethereal分析会很好的解决这个问题，具体参数如下：

tcpdump -i eth1 -c 2000 -w eth1.cap

-i eth1 只抓eth1口的数据

-c 2000代表数据包的个数，也就是只抓2000个数据包

-w eth1.cap 保存成cap文件，方便用ethereal分析

抓完数据包后ftp到你的FTP服务器，put一下，然后用ethereal软件打开就可以很直观的分析了

注：有时将.cap文件上传到FTP服务器后，发现用ethreal打开时提示数据包大于65535个，这是你在ftp上传或者下载的时候没有用bin的模式上传的原因。

另：有的网站提示在tcpdump中用-s 0命令，例如 tcpdump -i eth1 -c 2000 -s0 -w eth1.cap，可实际运行该命令时系统却提示无效的参数,去掉-s 0参数即可

例子：

[root@localhost cdr]#tcpdump -i eth0 -t tcp -s 60000 -w diaoxian.cap 
[root@localhost cdr]# tcpdump host 58.240.72.195 -s 60000 -w x.cap

 

tcpdump 的抓包保存到文件的命令参数是-w xxx.cap
抓eth1的包 
tcpdump -i eth1 -w /tmp/xxx.cap 
抓192.168.1.123的包 
tcpdump -i eth1 host 192.168.1.123 -w /tmp/xxx.cap 
抓192.168.1.123的80端口的包 
tcpdump -i eth1 host 192.168.1.123 and port 80 -w /tmp/xxx.cap 
抓192.168.1.123的icmp的包 
tcpdump -i eth1 host 192.168.1.123 and icmp -w /tmp/xxx.cap 
抓192.168.1.123的80端口和110和25以外的其他端口的包 
tcpdump -i eth1 host 192.168.1.123 and ! port 80 and ! port 25 and ! port 110-w /tmp/xxx.cap 
抓vlan 1的包 
tcpdump -i eth1 port 80 and vlan 1 -w /tmp/xxx.cap 
抓pppoe的密码 
tcpdump -i eth1 pppoes -w /tmp/xxx.cap 
以100m大小分割保存文件，超过100m另开一个文件 -C 100m 
抓10000个包后退出 -c 10000 
后台抓包， 控制台退出也不会影响： 
nohup tcpdump -i eth1 port 110 -w /tmp/xxx.cap & 
抓下来的文件可以直接用ethereal或者wireshark打开。 wireshark就是新版的ethereal，程序换名了

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


<<<<<<<<<<<<<<<<<<
LINUX命令 LINUX技巧 磁盘容量 空间

ls -l --sort=time | head  按时间排序查看最近10个文件

df -h 查分区大小
du -Bm 当前目录下文件大小（单位兆）

du -h --max-depth=1 .

sudo du --max-depth=1 -hBm /  查分区大小根目录大小

du -sm * | sort -n //统计当前目录大小 并安大小 排序
    du -sk * | sort -n
    du -sk * | grep guojf //看一个人的大小
    du -m | cut -d "/" -f 2 //看第二个/ 字符前的文字
    查看此文件夹有多少文件 /*/*/* 有多少文件
    du xmldb/
    du xmldb/*/*/* |wc -l
    40752
    解释：
    wc [-lmw]
    参数说明：
    -l :多少行
    -m:多少字符
    -w:多少字

sed

删除：d命令
sed '2d' example-----删除example文件的第二行。
sed '2,$d' example-----删除example文件的第二行到末尾所有行。
sed '$d' example-----删除example文件的最后一行。
sed '/test/'d example-----删除example文件所有包含test的行。
替换：s命令
sed 's/test/mytest/g' example
-----在整行范围内把test替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest。
sed -n 's/^test/mytest/p' example
-----(-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它。
sed 's/^192.168.0.1/&localhost/' example
-----&符号表示替换换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhost。
sed -n 's/able/\1rs/p' example
-----love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。
sed 's#10#100#g' example
-----不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100。
cat init.ora | grep -v  ^#|grep –v ^*  > initprod.ora


输出指定字符之前的部分
echo "djdkfalfjakfjak dfdfdf   doioio add" | sed -r 's/.*(doioio)/\1/'


删除文件z2.sh中每一行最后一个 (空格)之后的内容
sed 's/\ [^\ ]*$//' z2.sh
删除文件005tree.txt中每一行最后一个/之后的内容
sed 's/\/[^\/]*$//' 005tree.txt
sed 's/\/[^\/]*$//' 005tree.txt
删除文件000.txt中每一行最后一个,之后的内容
sed 's/,[^,]*//g' 000.txt
sed 's/,[^,]*//g' 000.txt


删除文件001中每一行最后一个空格之前的内容
cat 001 | sed -r 's/.*(\ )/\1/'
删除文件001中每一行最后一个AAA之前的内容
cat 001 | sed -r 's/.*(AAA)/\1/'
删除文件005中每一行第一个/之后的内容
sed 's/\/.*//' 005
删除文件005中每一行第一个A之后的内容
sed 's/A.*//' 005

在每行的头添加字符，比如"HEAD"，命令如下：
sed 's/^/HEAD&/g' test.file
在每行的行尾添加字符，比如"TAIL"，命令如下：
sed 's/$/&TAIL/g' test.file
在文件001每行的行尾添加字符，比如" Android.mk \|grep LOCAL_MODULE"，命令如下：
sed 's/$/& Android.mk \|grep LOCAL_MODULE/g' 001

每行复制一次
sed 's/.*/&\n&/' 009 > 0010

删除含export_includes的一行
sed '/export_includes/d' 004 > 005

去掉AA.txt中重复的行
awk '!a[$0]++'　AA.txt

两个文件按行合并，008tree并../005tree.txt到009
paste -d '' 008tree ../005tree.txt > 009


删除匹配Sysadmin的行
sed '/Sysadmin/d' thegeekstuff.txt 
sed '/Sysadmin/'d thegeekstuff.txt 


显示每4行中的第1行
sed    -n    '1~4p' xxx > 21
显示每4行中的第3行
sed    -n    '3~4p' xxx > 23

显示文件中重复的行
cat s700_defconfig | sort | uniq -cd

删除空行
:g/^\s*$/d
简单解释一下：
g ：全区命令
/ ：分隔符
^\s*$ ：匹配空行，其中^表示行首，\s表示空字符，包括空格和制表符，*重复0到n个前面的字符，$表示行尾。连起来就是匹配只有空字符的行，也就是空行。
/d ：删除该行 
>>>>>>>>>>>>>>>>>>


虚拟按键
qemu.hw.mainkeys=0

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
systrace工具
external/chromium-trace/systrace.py

如果双击打不开：
打开chromium浏览器   输入chrome://tracing/    再点load

adb shell setprop service.adb.root 1
adb wait-for-device
adb shell setenforce 0
adb wait-for-device

adb root
adb wait-for-device
adb remount
adb shell "echo 0 > /sys/kernel/debug/tracing/tracing_on"
adb shell "echo > /sys/kernel/debug/tracing/trace"
adb shell "echo 51200 > /sys/kernel/debug/tracing/buffer_size_kb"
adb shell "echo thermal:* > /sys/kernel/debug/tracing/set_event"
adb shell "echo msm_low_power:* >> /sys/kernel/debug/tracing/set_event"
adb shell "echo sched:sched_migrate_task >> /sys/kernel/debug/tracing/set_event"
adb shell "echo sched:sched_switch >> /sys/kernel/debug/tracing/set_event"
adb shell "echo sched:sched_wakeup >> /sys/kernel/debug/tracing/set_event"
adb shell "echo sched:sched_cpu_load >> /sys/kernel/debug/tracing/set_event"
adb shell "echo core_ctl_eval_need >> /sys/kernel/debug/tracing/set_event"
adb shell "echo cpufreq_interactive:* >> /d/tracing/set_event"
adb shell "echo kgsl:* >> /d/tracing/set_event"
adb shell "echo mdss:* >> /d/tracing/set_event"
adb shell "echo irq:* >> /sys/kernel/debug/tracing/set_event"
adb shell "cat /sys/kernel/debug/tracing/set_event"


Frame drop issue on browsing, gaming, and UX 丢帧问题，浏览，游戏，和UX
python systrace.py gfx input view sched am wm dalvik freq idle load sync workq power mmc disk -b 40000 -t 10 -o output.html

Application launch latency 应用程序启动延迟
python systrace.py gfx input sched am wm dalvik freq idle load sync workq power mmc disk  -b 40000 -t 10 -o output.html

Audio quality issue 音频质量问题
python systrace.py sched dalvik freq idle load sync workq power mmc disk audio hal res -b 40000 -t 10 -o output.html

Camera frame drop issue 相机帧下降问题
python systrace.py gfx sched am wm dalvik freq idle load sync workq power mmc disk camera hal res membus -b 40000 -t 10 -o output.html

Video frame drop issue 视频帧下降问题
python systrace.py gfx sched am wm dalvik freq idle load sync workq power mmc disk video audio hal res membus -b 40000 -t 10 -o output.htm
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
file debug / .c debug

adb shell "echo 8 > /proc/sys/kernel/printk"
adb shell "echo 'file qpnp-adc-tm.c +p' > /sys/kernel/debug/dynamic_debug/control"
adb shell "echo 'file qpnp-adc-common.c +p' > /sys/kernel/debug/dynamic_debug/control" 
adb shell "echo 'file qpnp-charger.c +p' > /sys/kernel/debug/dynamic_debug/control" 

adb shell "echo 'file core.c +p' > /sys/kernel/debug/dynamic_debug/control"
adb shell "echo 'file dwc3-msm.c +p' > /sys/kernel/debug/dynamic_debug/control"
adb shell "echo 'file gadget.c +p' > /sys/kernel/debug/dynamic_debug/control"

 （1）adb shell关闭LDO
如关闭L3：
cd /sys/kernel/debug/regulator/8916_l3/
echo 0 > enable
（2）LDO太多设备用到，不适合用adb shell来关。可以这样调试：
cat /sys/kernel/debug/regulator/8916_l6/consumers
shell@msm8916_32:/sys/kernel/debug/regulator/8916_l6 $ cat consumers
Device-Supply EN Min_uV Max_uV load_uA
0-000c-vio Y 1800000 1800000 0
0-0068-vi2c N 1800000 1800000 0
5-0038-vcc_i2c Y 1800000 1800000 0
1a98000.qcom,mdss_dsi-vddio N 1800000 1800000 100
1a98300.qcom,mdss_dsi_pll-vddio N 1800000 1800000 100
8916_l6 N 0 0 0
这样就可以看到是哪些设备请求了LDO6。然后 找到对应的代码，在休眠时关掉LDO，唤醒时再打开。
0-000c: 挂在I2C0上地址为0xc
5-0038: 挂在I2C0上地址为0x38
查看这两个设备的驱动代码是否有执行regulator_enable。

（3）通过寄存器地址关闭LDO
如LDO6的地址是0x14546，则关闭方法是：
# cd /sys/kernel/debug/spmi/spmi-0
# echo 0x14546 > address
# echo 1 > count
# cat data 可以读寄存器
# echo 0x00 > data 关LDO6 #在较新的平台是无法手动关闭LDO
在S600项目LDO6和LDO17分别是提供主外设用的数字电压和模拟电压，分别是1.8v和2.8v，在cd /sys/kernel/debug/regulator/8916_l6中，cat use_count，如果值等于0表明引用计数没有使用LDO6.如果不等于0，分别将他们驱动去除，去除之后重新查看use_count的值，在S600项目中，因为icm20546陀螺仪驱动导致底电流过高，系统睡不下去。 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
USB端口不识别的问题

1.
vi /etc/udev/rules.d/70-android.rules
SUBSYSTEM=="usb", ATTRS{idVendor}=="05c6", ATTRS{idProduct}=="9091",MODE="0666"

运行命令，重启udev：
$sudo chmod a+rx /etc/udev/rules.d/70-android.rules
$sudo service udev restart

2.如果还不行
sudo chown root:root adb
sudo chmod a+x adb
sudo chmod a+s adb
adb kill-server
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
camera FULLSweep
sudo adb root;
adb wait-for-device;
sudo adb remount;
adb wait-for-device;
adb shell setprop debug.camera.af_fullsweep 1

adb shell setprop persist.camera.stats.debug.mask 4

adb shell logcat |grep "FULL Sweep AF ENDs here - success"


7
10
14
20
30
40
50
60
120
300

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
camera debug旧的
typedef enum {  
STATS_DEBUG_MASK_AEC_LOG   = (1 << 0),   //<value> 1   //曝光
STATS_DEBUG_MASK_AWB_LOG   = (1 << 1),   //2  //白平衡
STATS_DEBUG_MASK_AF_LOG   = (1 << 2),   //4   //对焦
STATS_DEBUG_MASK_ASD_LOG   = (1 << 3),   //8   //自动场景选择
STATS_DEBUG_MASK_AFD_LOG   = (1 << 4),   //16   //工频干扰消除
} stats_debug_mask_type;  

adb shell setprop persist.camera.stats.debug.mask 1 //AEC
adb shell setprop persist.camera.stats.debug.mask 4 //AF

新的
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
KBA-160511044137
Camera persist使用手册
基于MSM8996平台PL1.0
Contents
一. Log部分... 9
1. persist.camera.global.debug. 9
2. persist.camera.mct.debug. 9
3. persist.camera.sensor.debug. 9
4. persist.camera.iface.logs. 10
5. persist.camera.isp.debug. 10
6. persist.camera.stats.debug. 10
7. persist.camera.stats.af.debug. 10
8. persist.camera.stats.aec.debug. 10
9. persist.camera.stats.awb.debug. 10
10. persist.camera.stats.asd.debug. 11
11. persist.camera.stats.afd.debug. 11
12. persist.camera.stats.q3a.debug. 11
13. persist.camera.stats.is.debug. 11
14. persist.camera.stats.haf.debug. 11
15. persist.camera.pproc.debug.mask. 11
16. persist.camera.cpp.debug.mask. 12
17. persist.camera.c2d.debug.mask. 12
18. persist.camera.imglib.logs. 12
19. persist.camera.hal.debug. 1220. persist.camera.mmstill.logs. 12
二. Module部分... 13
1. SENSOR模块... 13
1) persist.camera.sensor.gain. 13
2) persist.camera.sensor.linecount. 13
3) persist.dual.gain_tune. 13
4) persist.dual.line_tune. 13
5) persist.camera.fastaec. 13
6) persist.camera.iso100. 14
7) persist.camera.csid.payload. 14
8) persist.camera.sensorliveconnect. 14
9) persist.partial.skip. 14
10) persist.camera.led.rerdbg. 14
11) persist.camera.cal.af. 14
12) persist.camera.cal.awb. 15
13) persist.camera.cal.lsc. 15
14) persist.camera.cal.dp. 15
15) persist.camera.cal.dual 15
16) persist.camera.dumpmetadata. 15
2. IFACE2模块... 16
1) persist.camera.isp.testgen. 16
2) persist.camera.isp.dump. 16
3) persist.camera.isp.dump_cnt. 164) persist.camera.isp.ppbypass. 16
5) persist.camera.isp.buf_cnt. 16
6) persist.camera.hvx_lib_1. 17
7) persist.camera.hvx_lib_2. 17
3. ISP2模块... 18
1) persist.camera.isp.turbo. 18
2) persist.camera.isp.dualisp. 18
3) persist.camera.dumpmetadata. 18
4) persist.camera.tintless.skip. 18
5) persist.camera.saturationext. 18
6) persist.camera.isp.regdump. 19
7) persist.camera.isp.offregdump. 19
8) persist.camera.isp.cac_disable. 19
9) persist.camera.isp.ltm_disable. 19
10) persist.camera.ltm.sw.. 19
11) persist.camera.ltm.filteroff. 19
12) persist.camera.ltm.out. 19
13) persist.camera.ltm.overlap. 20
4. STATS模块... 21
1) persist.camera.ledcalib.enabled. 21
2) persist.camera.mobicat. 21
5. PPROC-NEW模块... 22
1) persist.enable.max.pending.buf. 22
2) persist.camera.c2d.disable. 223) persist.camera.tnr.force_enable. 22
4) persist.camera.enable_vpu. 22
5) persist.camera.dumpmetadata. 22
6. IMGLIB模块... 23
1) persist.camera.imglib.hdr.dump. 23
2) persist.camera.imglib.cac.dump. 23
3) persist.camera.mobicat. 23
4) persist.camera.imglib.cf.ver. 23
5) persist.imglib.cf.tune. 23
6) persist.imglib.cf.deghost. 24
7) persist.imglib.cf.flash_weight. 24
8) persist.camera.imglib.dump. 24
9) persist.camera.fd.dump. 24
10) persist.camera.imglib.face_sw.. 24
11) persist.camera.imglib.face_all 24
12) persist.camera.fd_region_filter. 25
13) persist.camera.imglib.bsgc. 25
14) persist.camera.imglib.fd_arm.. 25
15) persist.camera.imglib.tp.mask. 25
16) persist.camera.imglib.tp.effect. 25
17) persist.camera.imglib.tp.power. 26
18) persist.camera.imglib.fddsp. 26
19) persist.camera.imglib.cds. 2620) persist.camera.dumpmetadata. 26
7. MCT模块... 27
1) persist.camera.max_prev.enable. 27
2) persist.camera.max.snapshot. 27
3) persist.camera.logsync. 27
4) persist.camera.logsync.interval 27
5) persist.camera.debugfs_root. 27
6) persist.camera.debug.exit. 27
8. MM-STILL模块... 28
1) persist.camera.max_prev.enable persist.camera.jpeg.dumpqtable. 28
2) persist.camera.kpi.debug. 28
9. QCAMERA2模块... 29
1) persist.camera.longshot.save. 29
2) persist.camera.jpeg_burst. 29
3) persist.camera.tn.disable. 29
4) persist.camera.zsl_raw.. 29
5) persist.camera.zsl_yuv. 29
6) persist.camera.zsl_matching. 29
7) persist.camera.nonzsl.yuv. 30
8) persist.camera.preview_raw.. 30
9) persist.camera. video_raw.. 30
10) persist.camera.snapshot_raw.. 30
11) persist.camera.dumpimg. 30
12) persist.camera.preview_yuv. 3013) persist.camera.raw_yuv. 31
14) persist.camera.mem.usepool 31
15) persist.camera.imglib.stillmore. 31
16) persist.camera.raw.format. 31
17) persist.camera.feature.cac. 31
18) persist.camera.feature.restart. 31
19) persist.sys.exif.make. 32
20) ro.product.manufacturer. 32
21) persist.sys.exif.model 32
22) ro.product.model 32
23) persist.sys.exif.model 32
24) persist.camera.feature.shutter. 32
25) persist.camera.kpi.debug. 33
26) persist.debug.sf.showfps. 33
27) persist.camera.thermal.mode. 33
28) persist.camera.ltmforseemore. 33
29) persist.camera.batchcount. 33
30) persist.camera.aux.preview.size. 33
31) persist.camera.aux.picture.size. 34
32) persist.camera.opt.livepic. 34
33) persist.camera.liveshot.size. 34
34) persist.camera.preview.ubwc. 34
35) persist.camera.led.on.period. 3436) persist.camera.retro.number. 34
37) persist.camera.effect. 35
38) persist.camera.stats.af.paaf. 35
39) persist.camera.continuous.iso. 35
40) persist.camera.auto.hdr.enable. 35
41) persist.capture.burst.exposures. 35
42) persist.camera.no-display. 35
43) persist.camera.tnr_cds. 36
44) persist.camera.tnr.video. 36
45) persist.camera.tnr.preview.. 36
46) persist.camera.tnr.snapshot. 36
47) persist.camera.rdi.mode. 36
48) persist.camera.secure.mode. 36
49) persist.camera.zsl.interval 36
50) persist.camera.zsl.backlookcnt. 37
51) persist.camera.zsl.queuedepth. 37
52) persist.camera.snapshot.number. 37
53) persist.camera.snapshot.fd. 37
54) persist.camera.mobicat. 37
55) persist.capture.burst.exposures. 37
56) persist.camera.hdr.outcrop. 38
57) persist.camera.zsl.mode. 38
58) persist.debug.set.fixedfps. 38
59) persist.camera.zzhdr.enable. 3860) persist.camera.zzhdr.video. 38
61) persist.camera.tintless. 38
62) persist.camera.video.CDS. 39
63) persist.camera.CDS. 39
64) persist.camera.ois.disable. 39
65) persist.camera.set.afd. 39
66) persist.camera.mem.usecache. 39
67) persist.denoise.process.plates. 39
68) persist.camera.snap.format. 40
69) persist.camera.video.ubwc. 40
70) persist.camera.exif.rotation. 40
71) persist.camera.dcrf.enable. 40
72) persist.camera.eztune.enable. 40
73) persist.camera.is_type. 40
74) persist.camera.preview.seemore. 41
75) persist.camera.offlineraw.. 41
76) persist.camera.multi_pass. 41
77) persist.camera.pp_scaling. 41
78) persist.camera.llnoise. 41
79) persist.camera.video.batchsize. 41
80) persist.camera.longshot.stages. 42
81) persist.camera.llc. 42
82) persist.camera.fdvideo. 4283) persist.camera.dual.camera.dump. 42
84) persist.camera.dual.camera.mpo. 42
85) persist.camera.aux.camera. 42
86) persist.camera.dc.frame.sync. 43
87) persist.camera.HAL3.enabled. 43
88) persist.camera.dual.camera. 43
89) persist.camera.perflock.enable. 43
90) persist.camera.perflock.enable. 43
91) persist.camera.disp.num_vsync. 43
92) persist.camera.disp.ms_to_vsync. 44
93) persist.camera.disp.filter_max. 44
94) persist.camera.disp.filter_min. 44
95) persist.camera.disp.fps. 44
96) persist.camera.dumpmetadata. 44
一. Log部分
8996 重新定义了自己的log规则,使用起来更加方便简洁,相关代码的主要实现部分在
camera_dbg.c文件中。框架定义了如下6个log级别:
名称 数值
NONE 0
ERROR 1
WARN 2HIGH 3
DBG 4
LOW 5
INFO 6
注:INFO级别不可控,是一定会打印的。
查看当前系统使能了哪些级别的log,可以使用参考命令:
adb shell getprop | grep "camera"
下面是开启各个模块log级别的简单描述。
1. persist.camera.global.debug (安卓8.1 persist.vendor.camera.global.debug)
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性是总的log级别开关。
注意: 若子模块的log级别小于该属性设置值,则以该属性为准;若子模块的log
级别大于该属性设置值,则以子模块设置的log级别为准。
示例:adb shell setprop persist.camera.global.debug 5
2. persist.camera.mct.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制MCT模块的log级别。
示例:adb shell setprop persist.camera.mct.debug 5
3. persist.camera.sensor.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制SENSOR模块的log级别。示例:adb shell setprop persist.camera.sensor.debug 5
4. persist.camera.iface.logs
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制IFACE模块的log级别。
示例:adb shell setprop persist.camera.iface.logs 5
5. persist.camera.isp.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制ISP模块的log级别。
示例:adb shell setprop persist.camera.isp.debug 5
6. persist.camera.stats.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制STATS模块的log级别。
注意: 这是一个container模块。
示例:adb shell setprop persist.camera.stats.debug 5
7. persist.camera.stats.af.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制AF模块的log级别。
示例:adb shell setprop persist.camera.stats.af.debug 5
8. persist.camera.stats.aec.debug
persist.vendor.camera.stats.aec.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制AEC模块的log级别。
示例:adb shell setprop persist.camera.stats.aec.debug 5  (persist.vendor.camera.stats.aec.debug)

9. persist.camera.stats.awb.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制AWB模块的log级别。
示例:adb shell setprop persist.camera.stats.awb.debug 5
10. persist.camera.stats.asd.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制ASD模块的log级别。
示例:adb shell setprop persist.camera.stats.asd.debug 5
11. persist.camera.stats.afd.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制AFD模块的log级别。
示例:adb shell setprop persist.camera.stats.afd.debug 5
12. persist.camera.stats.q3a.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制Q3A模块的log级别。
注意: 这是一个container模块。
示例:adb shell setprop persist.camera.stats.q3a.debug 5
13. persist.camera.stats.is.debug
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制IS模块的log级别。
示例:adb shell setprop persist.camera.stats.is.debug 5
14. persist.camera.stats.haf.debug数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制HAF模块的log级别。
示例:adb shell setprop persist.camera.stats.haf.debug 5
15. persist.camera.pproc.debug.mask
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制PPROC模块的log级别。
注意: 这是一个container模块。
示例:adb shell setprop persist.camera.pproc.debug.mask 5
16. persist.camera.cpp.debug.mask
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制CPP模块的log级别。
示例:adb shell setprop persist.camera.cpp.debug.mask 5
17. persist.camera.c2d.debug.mask
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制C2D的log级别。
示例:adb shell setprop persist.camera.c2d.debug.mask 5
18. persist.camera.imglib.logs
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制IMGLIB模块的log级别。
示例:adb shell setprop persist.camera.imglib.logs 5
19. persist.camera.hal.debug
数值:0-5功能: 设置不同的数值,将打印对应级别的log。该属性控制HAL的log级别。
示例:adb shell setprop persist.camera.hal.debug 5
20. persist.camera.mmstill.logs
数值:0-5
功能: 设置不同的数值,将打印对应级别的log。该属性控制mm-still的log级别。
示例:adb shell setprop persist.camera.mmstill.logs 5
二. Module部分
以module为单位,简述各个module中persist使用方法。
1. SENSOR模块
1) persist.camera.sensor.gain
数值: 非负数
功能: 手动设置real gain到sensor。
注意: 该属性在宏ENABLE_MANUAL_EXPOSURE_UPDATE被使能的前提下生效。
示例:adb shell setprop persist.camera.sensor.gain 1
2) persist.camera.sensor.linecount
数值: 非负数
功能: 手动设置line count到sensor。
注意: 该属性在宏ENABLE_MANUAL_EXPOSURE_UPDATE被使能的前提下生效。
示例:adb shell setprop persist.camera.sensor.linecount 1024
3) persist.dual.gain_tune
数值: 非负数
功能: 手动设置双摄像头gain factor。注意: 该属性在双摄像头使用场景中生效。
示例:
4) persist.dual.line_tune
数值: 非负数
功能: 手动设置双摄像头line count factor。
注意: 该属性在双摄像头使用场景中生效。
示例:
5) persist.camera.fastaec
数值: 非负整数
功能:fast aec模式下,手动设置frame skip数目。
示例:adb shell setprop persist.camera.fastaec 2
6) persist.camera.iso100
数值: 非负数
功能: 手动设置iso100的gain数值。
示例:adb shell setprop persist.camera.iso100 1
7) persist.camera.csid.payload
数值:0或4
功能: test模式下,将csid设置为0或4模式,以便产生相应的测试pattern。
示例:adb shell setprop persist.camera.csid.payload 4
8) persist.camera.sensorliveconnect
数值:0或1
功能: 设置为1,则在代码中开启sensor live connect线程,方便调试工具实时控制AF。
示例:adb shell setprop persist.camera.sensorliveconnect 19) persist.partial.skip
数值:0或1
功能: 设置为1,则使能闪光灯下的frame skip模式。
示例:adb shell setprop persist.partial.skip 1
10) persist.camera.led.rerdbg
数值:0或1
功能: 开启闪光灯去红眼功能后,若将该属性设置为1,则会打印预闪电流、持续时间、
脉冲数目等调试信息。
示例:adb shell setprop persist.camera.led.rerdbg 1
11) persist.camera.cal.af
数值:0或1
功能: 如果设置为0,则不加载eeprom中af校准数据。
示例:adb shell setprop persist.camera.cal.af 1
12) persist.camera.cal.awb
数值:0或1
功能: 如果设置为0,则不加载eeprom中awb校准数据。
示例:adb shell setprop persist.camera.cal.awb 1
13) persist.camera.cal.lsc
数值:0或1
功能: 如果设置为0,则不加载eeprom中lsc校准数据。
示例:adb shell setprop persist.camera.cal.lsc 1
14) persist.camera.cal.dp
数值:0或1
功能: 如果设置为0,则不加载eeprom中dp校准数据。示例:adb shell setprop persist.camera.cal.dp 1
15) persist.camera.cal.dual
数值:0或1
功能: 如果设置为0,则不做dual camera校准。
示例:adb shell setprop persist.camera.cal.dual 1
16) persist.camera.dumpmetadata
数值:0或1
功能: 若设置为1,则将sensor中的meta数据发送到MCT BUS,然后通过
mct_stream_fill_metadata_v1接口将信息传递给HAL。
注意: 该属性需要配合HAL/PPROC中同名属性进行使用,此处仅仅是HAL/PPROC
中同名属性生效的前提。
示例:adb shell setprop persist.camera.dumpmetadata 1
2. IFACE2模块
1) persist.camera.isp.testgen
数值:0或1
功能: 若设置为1,折预览将呈现七彩条纹图像。
示例:adb shell setprop persist.camera.isp.testgen 1
2) persist.camera.isp.dump
数值: 需要dump的stream type所对应的enum数值。
功能: 使能后,会根据设置的stream type去dump相应的帧数据。路径:/data/misc/camera/
示例:adb shell setprop persist.camera.isp.dump 2
3) persist.camera.isp.dump_cnt
数值: 非负整数功能: 该属性定义persist.camera.isp.dump需要dump的帧数。
示例:adb shell setprop persist.camera.isp.dump_cnt 10
4) persist.camera.isp.ppbypass
数值:0或1
功能: 使能该属性后,isp不再自己申请native buffer,而是使用从HAL map过来的buffer,并且
buffer将不做pproc处理。
注意: 生效前提是HAL已经申请过足够数量的buffer。
示例:adb shell setprop persist.camera.isp.ppbypass 1
5) persist.camera.isp.buf_cnt
数值: 非零正整数
功能:stream on后,会request image buffer,有两种方式,一是map HAL的buffer,
二是自己在本地申请native buffer。如果选择方式二,则该属性将定义native buffer的数量。
注意: 生效前提是ISP自己在本地申请native buffer。
示例:adb shell setprop persist.camera.isp.buf_cnt 4
6) persist.camera.hvx_lib_1
数值:external chromatix lib名称
功能: 手动指定加载的后置external chromatix lib。
注意: 生效前提是tuning没有设置external chromatix的name。
示例:adb shell setprop persist.camera.hvx_lib_1 libchromatix_xxx.so
7) persist.camera.hvx_lib_2
数值:external chromatix lib名称
功能: 手动指定加载的前置external chromatix lib。
注意: 生效前提是tuning没有设置external chromatix的name。
示例:adb shell setprop persist.camera.hvx_lib_2 libchromatix_xxx.so3. ISP2模块
1) persist.camera.isp.turbo
数值:0或1
功能: 若设置为1,则将turbo clk设置为ISP默认工作clk。
注意: 设置完成后,需要重启手机才会生效。
示例:adb shell setprop persist.camera.isp.turbo 1
2) persist.camera.isp.dualisp
数值:0或1
功能: 若设置为1,将强制使用两个VFE工作。若设置为0,则将根据默认clk与user请求clk
的大小关系来决定使用VFE数量。
注意: 若channel中有raw stream存在,该属性将失效。
示例:adb shell setprop persist.camera.isp.dualisp 1
3) persist.camera.dumpmetadata
数值:0或1
功能: 若设置为1,将分配meta dump的资源。同时,将打印mesh_roll、tintless_algo等sub isp
module中的调试信息或在/data/misc/camera/路径下生成相关调试信息文件。
注意: 该属性需要配合HAL/PPROC中同名属性进行使用,此处仅仅是HAL/PPROC
中同名属性生效的前提。
示例:adb shell setprop persist.camera.dumpmetadata 1
4) persist.camera.tintless.skip
数值: 非负整数
功能: 设置tintless所需要skip的frame数目,默认是skip 2帧。
示例:adb shell setprop persist.camera.tintless.skip 2
5) persist.camera.saturationext数值:true或false
功能:
示例:
6) persist.camera.isp.regdump
数值: 非负整数
功能:isp online process时,根据设定的数值去dump相应帧数的register信息。
示例:adb shell setprop persist.camera.isp.regdump 30
7) persist.camera.isp.offregdump
数值: 非负整数
功能:isp offline process时,根据设定的数值去dump相应帧数的register信息。
示例:adb shell setprop persist.camera.isp.offregdump 30
8) persist.camera.isp.cac_disable
数值:0或1
功能: 手动开/关CAC功能。
示例:adb shell setprop persist.camera.isp.cac_disable 1
9) persist.camera.isp.ltm_disable
数值:0或1
功能: 手动开/关LTM功能。
示例:adb shell setprop persist.camera.isp.ltm_disable 1
10) persist.camera.ltm.sw
数值:
功能:
示例:11) persist.camera.ltm.filteroff
数值:0或1
功能:
示例:
12) persist.camera.ltm.out
数值:
功能:
示例:
13) persist.camera.ltm.overlap
数值:0-50
功能: 手动定义cell overlap factor的大小。
示例:adb shell setprop persist.camera.isp.ltm_disable 10
4. STATS模块
1) persist.camera.ledcalib.enabled
数值:0或1
功能: 手动开/关双色温LED校准功能。
示例:adb shell setprop persist.camera.ledcalib.enabled 1
2) persist.camera.mobicat
数值:0或1
功能: 手动开/关mobicat。
示例:adb shell setprop persist.camera.mobicat 1
5. PPROC-NEW模块
1) persist.enable.max.pending.buf数值:1或2
功能: 定义cpp硬件一次操作所处理的buffer数量。
示例:adb shell setprop persist.enable.max.pending.buf 1
2) persist.camera.c2d.disable
数值:0或1
功能: 手动开/关C2D。
示例:adb shell setprop persist.camera.c2d.disable 1
3) persist.camera.tnr.force_enable
数值:0或1
功能: 手动开/关TNR。
示例:adb shell setprop persist.camera.tnr.force_enable 1
4) persist.camera.enable_vpu
数值:0或1
功能: 手动开/关VPU。
示例:adb shell setprop persist.camera.enable_vpu 1
5) persist.camera.dumpmetadata
数值:0或1
功能: 使能后,将dump PPROC的Metadata到/data/misc/camera/路径下。
示例:adb shell setprop persist.camera.dumpmetadata 1
6. IMGLIB模块
1) persist.camera.imglib.hdr.dump
数值:no/in/out/in out功能: 设置为no,关闭HDR dump功能;设置为in,将dump输入帧;设置为out,将dump输出帧;
设置为in out,将同时dump输入与输出帧。
示例:adb shell setprop persist.camera.imglib.hdr.dump in
2) persist.camera.imglib.cac.dump
数值:no/in/out/inout
功能: 设置为no,关闭CAC dump功能;设置为in,将dump输入帧;设置为out,将dump输出帧;
设置为in out,将同时dump输入与输出帧。
示例:adb shell setprop persist.camera.imglib.cac.dump no
3) persist.camera.mobicat
数值:0与非0
功能: 设置为0,关闭这个功能;设置为其他值,将在返回给HAL的meta信息中添加mobicat
相关的调试信息。
注意: 该属性需要配合HAL中的同名属性使用。
示例:adb shell setprop persist.camera.mobicat 0
4) persist.camera.imglib.cf.ver
数值: chroma flash 库的版本号
功能: 返回使用的chroma flash 库版本号给chroma flash初始化提供版本信息。
注意: 该属性一般有系统设置,此处仅做读取操作。
示例:adb shell getprop persist.camera.imglib.cf.ver
5) persist.imglib.cf.tune
数值:0或1
功能: "手动设置chroma flash参数"的总开关,使能后,才能通过其他属性手动修改相应参数。
示例:adb shell setprop persist.imglib.cf.tune 1
6) persist.imglib.cf.deghost数值:0或1
功能: 手动开/关deghost功能。
注意: 该属性在persist.imglib.cf.tune被使能后才能生效。
示例:adb shell setprop persist.imglib.cf.deghost 1
7) persist.imglib.cf.flash_weight
数值:1-15
功能: 手动设置chroma flash 亮度等级。
注意: 该属性在persist.imglib.cf.tune被使能后才能生效。
示例:adb shell setprop persist.imglib.cf.flash_weight 1
8) persist.camera.imglib.dump
数值:0或1
功能: imglib模块frame dump总开关。
示例:adb shell setprop persist.camera.imglib.dump 1
9) persist.camera.fd.dump
数值:0-4
功能: 设置为0,将关闭face frame dump功能;设置为1,将dump non-tracked faces帧数据;
设置为2,将dump tracked faces帧数据;设置为3,将dump non-detected faces帧数据;设置为4,
将dump所有的帧数据。
注意: 该属性只有在persist.camera.imglib.dump为1的前提下才能生效。
示例:adb shell setprop persist.camera.fd.dump 1
10) persist.camera.imglib.face_sw
数值:0或1
功能: 手动开/关软件辅助人脸识别功能。
示例:adb shell setprop persist.camera.imglib.face_sw 111) persist.camera.imglib.face_all
数值:0或1
功能: 手动开/关全角度搜寻人脸功能。使能该功能后,在识别人脸时,将不考虑手机的方向。
示例:adb shell setprop persist.camera.imglib.face_all 1
12) persist.camera.fd_region_filter
数值:0或1
功能: 使能后,将根据region来执行相应的滤波设定。相应region参数,由chromatix加载进来。
示例:adb shell setprop persist.camera.fd_region_filter 1
13) persist.camera.imglib.bsgc
数值:0或1
功能: 设置为1,将Enable blink, smile, gaze, contour detection。
示例:adb shell setprop persist.camera.imglib.bsgc 1
14) persist.camera.imglib.fd_arm
数值:0或1
功能: 设置为0,将优先申请HW FD资源。设置为1,将不优先使用HW FD资源,将会优先去申请
DSP FD资源。
示例:adb shell setprop persist.camera.imglib.fd_arm 1
15) persist.camera.imglib.tp.mask
数值:0或1
功能: 在TruePortrait模式下,设置为1,将使能bodymask。
示例:adb shell setprop persist.camera.imglib.tp.mask 1
16) persist.camera.imglib.tp.effect
数值:0-2功能: 在TruePortrait模式下,手动设置effect,0代表boke effect,1代表halo effect,2代表notion
blur effect。
示例:adb shell setprop persist.camera.imglib.tp.effect 1
17) persist.camera.imglib.tp.power
数值: 正整数
功能: 在TruePortrait模式下,手动设置effect的强度,数值越大,强度越大。
示例:adb shell setprop persist.camera.imglib.tp.power 1
18) persist.camera.imglib.fddsp
数值:0或1
功能: 设置为1,将强制使用FD DSP资源。
示例:adb shell setprop persist.camera.imglib.fddsp 1
19) persist.camera.imglib.cds
数值:0-5
功能: 手动选择CDS的运行模式:C、NEON、NENO_ASM、DSP、GPU、FCV。
示例:adb shell setprop persist.camera.imglib.cds 1
20) persist.camera.dumpmetadata
数值:0或1
功能: 使能后,将meta中填充CAC相关调试信息。并且,可以dump WNR相关参数到/data/misc/
camera/路径下
示例:adb shell setprop persist.camera.dumpmetadata 1
7. MCT模块
1) persist.camera.max_prev.enable
数值:0或1功能: 使能后,将使用符合条件的最大尺寸来做preview。
示例:adb shell setprop persist.camera.max_prev.enable 1
2) persist.camera.max.snapshot
数值:0或1
功能: 使能后,将使用符合条件的最大尺寸来做sanpshot。
示例:adb shell setprop persist.camera.max.snapshot 1
3) persist.camera.logsync
数值:0或1
功能:
示例:
4) persist.camera.logsync.interval
数值:
功能:
示例:
5) persist.camera.debugfs_root
数值:
功能:
示例:
6) persist.camera.debug.exit
数值:
功能:
示例:
8. MM-STILL模块1) persist.camera.max_prev.enable persist.camera.jpeg.dumpqtable
数值:0或1
功能: 开启后,将打印jpeg的quality table调试信息。
示例:adb shell setprop persist.camera.jpeg.dumpqtable 1
2) persist.camera.kpi.debug
数值:1或2
功能: 设置KPI调试信息的级别,设置为1表示KPI_APT,设置为2表示KPI_DBG级别。
示例:adb shell setprop persist.camera.kpi.debug 1
9. QCAMERA2模块
1) persist.camera.longshot.save
数值:0或1
功能: 是否启动在HAL存储连拍照片的routine。
示例:adb shell setprop persist.camera.longshot.save 1
2) persist.camera.jpeg_burst
数值:0或1
功能: 手动开/关jpeg burst模式。
注意: 若有设置persist.camera.longshot.save,该属性将失效。
示例:adb shell setprop persist.camera.jpeg_burst 1
3) persist.camera.tn.disable
数值:0或1
功能: 手动开/关jpeg thumbnail编码功能。
示例:adb shell setprop persist.camera.tn.disable 1
4) persist.camera.zsl_raw数值:0或1
功能: 使能后,将dump zsl channel 中的raw stream到文件。
示例:adb shell setprop persist.camera.zsl_raw 1
5) persist.camera.zsl_yuv
数值:0或1
功能: 使能后,将dump zsl channel 中的yuv stream到文件。
示例:adb shell setprop persist.camera.zsl_yuv 1
6) persist.camera.zsl_matching
数值:0或1
功能: 开启后,将打印ZSL super buffer里面每块子buffer的编号、对应的frame_idx、属于的stream
类型、时间戳等信息。
示例:adb shell setprop persist.camera.zsl_matching 1
7) persist.camera.nonzsl.yuv
数值:0或1
功能: 使能后,将dump non-zsl channel 中的yuv stream到文件。
示例:adb shell setprop persist.camera.nonzsl.yuv 1
8) persist.camera.preview_raw
数值:0-63
功能: 开启后,将dump preview raw stream到文件。0代表关闭,1-63代表开启后自定义raw stream
中的buffer数量。
示例:adb shell setprop persist.camera.preview_raw 5
9) persist.camera. video_raw
数值:0-63功能: 开启后,将dump video raw stream到文件。0代表关闭,1-63代表开启后自定义raw stream
中的buffer数量。
示例:adb shell setprop persist.camera. video_raw 5
10) persist.camera.snapshot_raw
数值:0或1
功能: 开启后,将dump snapshot raw stream到文件。
示例:adb shell setprop persist.camera.snapshot_raw 1
11) persist.camera.dumpimg
数值:0或1
功能: 开启后,将dump jpeg编码之前的YUV数据和编码之后的jpeg图像到文件。
示例:adb shell setprop persist.camera.dumpimg 1
12) persist.camera.preview_yuv
数值:0-63
功能: 手动定义preview stream中的buffer数量。
示例:adb shell setprop persist.camera.preview_yuv 5
13) persist.camera.raw_yuv
数值:0或1
功能: 开启后,将在preview/zsl/capture channel中强制添加raw stream。
示例:adb shell setprop persist.camera.raw_yuv 1
14) persist.camera.mem.usepool
数值:0或1
功能: 开启后,在申请分配stream buffer的时候,优先从内存池中分配。
示例:adb shell setprop persist.camera.mem.usepool 115) persist.camera.imglib.stillmore
数值: 非负整数
功能: 手动设置stillmore功能所需要的buffer数量。
注意: 设置的数值要在stillmore 这个功能做支持的min与max buffer cnt之间时,才能生效。
示例:adb shell setprop persist.camera.imglib.stillmore 1
16) persist.camera.raw.format
数值: 根据宏
功能:设置raw stream的图像格式,例如,设置为宏格式CAM_FORMAT_BAYER_QCOM
_RAW_10BPP_GBRG。
示例:adb shell setprop persist.camera.raw.format 1
17) persist.camera.feature.cac
数值:0或1
功能: 手动开/关CAC。
示例:adb shell setprop persist.camera.feature.cac 1
18) persist.camera.feature.restart
数值:0或1
功能:定义image capture期间,是否需要重启preview。
示例:adb shell setprop persist.camera.feature.restart 1
19) persist.sys.exif.make
数值: null或任意str
功能: 手动定制写的exif信息(manufacturer)内容的开关。
示例:adb shell setprop persist.sys.exif.make null
20) ro.product.manufacturer数值:str
功能: 手动定制写的exif信息(manufacturer)内容。
注意: 前提条件ENABLE_MODEL_INFO_EXIF使能。
示例:adb shell setprop ro.product.manufacturer qcom
21) persist.sys.exif.model
数值: null或任意str
功能: 手动定制写的exif信息(model)内容的开关。
示例:adb shell setprop persist.sys.exif.model null
22) ro.product.model
数值:str
功能: 手动定制写的exif信息(model)内容。
注意: 前提条件ENABLE_MODEL_INFO_EXIF使能。
示例:adb shell setprop ro.product.model qcom
23) persist.sys.exif.model
数值:str
功能: 手动定制写的exif信息(description)内容。
注意: 前提条件ENABLE_MODEL_INFO_EXIF使能。
示例:adb shell setprop persist.sys.exif.model qcom
24) persist.camera.feature.shutter
数值:0或1
功能: 开启后,将在capture结束后立刻播放快门声音。
示例:adb shell setprop persist.camera.feature.shutter 1
25) persist.camera.kpi.debug数值:1或2
功能: 设置1,则打印KPI log级别为KPI_ONLY;设置2,则打印KPI log级别为KPI_DBG。
示例:adb shell setprop persist.camera.kpi.debug 1
26) persist.debug.sf.showfps
数值:0或1
功能: 开启后,将在log中实时打印preview的帧率。
示例:adb shell setprop persist.debug.sf.showfps 1
27) persist.camera.thermal.mode
数值: frameskip或fps
功能: 若设置为frameskip模式,则thermal将按照指定的frame skip pattern来丢帧;若设置为fps(
默认模式),则thermal将按照默认设定来动态调整帧率。
示例:adb shell setprop persist.camera.thermal.mode fps
28) persist.camera.ltmforseemore
数值:0或1
功能: 在seeemore功能下开启/关闭LTM。
示例:adb shell setprop persist.camera.ltmforseemore 1
29) persist.camera.batchcount
数值: 非0整数
功能: 手动定义KEY_QC_VIDEO_BATCH_SIZE的数值。
示例:adb shell setprop persist.camera.batchcount 1
30) persist.camera.aux.preview.size
数值: widthxheight,例如320x240
功能: 手动定义AUX摄像头的预览size。
示例:adb shell setprop persist.camera.aux.preview.size 320x4031) persist.camera.aux.picture.size
数值: widthxheight,例如320x240
功能: 手动定义AUX摄像头的照片size。
示例:adb shell setprop persist.camera.aux.picture.size 320x240
32) persist.camera.opt.livepic
数值:0或1
功能: 使能后,live snapshot时将自动选用最优的照片尺寸。
示例:adb shell setprop persist.camera.opt.livepic 1
33) persist.camera.liveshot.size
数值: widthxheight,例如320x240
功能: 手动设置live snapshot的照片尺寸。
示例:adb shell setprop persist.camera.liveshot.size 320x240
34) persist.camera.preview.ubwc
数值:0或1
功能: 开启后,将preview format强制设置为CAM_FORMAT_YUV_420_NV12_UBWC格式。
示例:adb shell setprop persist.camera.preview.ubwc 1
35) persist.camera.led.on.period
数值:0-800
功能:设置 burst LED on的持续时间,如果设置数值为小于0,则使用默认值(300)。
示例:adb shell setprop persist.camera.led.on.period 300
36) persist.camera.retro.number
数值: 非0正整数
功能: 手动设置KEY_QC_NUM_RETRO_BURST_PER_SHUTTER。示例:adb shell setprop persist.camera.retro.number 1
37) persist.camera.effect
数值:"none"/ "mono"/ "negative"/ "solarize"/ "sepia"/ "posterize"/ "whiteboard"/ "blackboard"/ "aqua
"
功能: 手动设置effect。
示例:adb shell setprop persist.camera.effect none
38) persist.camera.stats.af.paaf
数值:0或1
功能: 手动开/关PAAF。
示例:adb shell setprop persist.camera.stats.af.paaf 1
39) persist.camera.continuous.iso
数值: 非0正整数
功能: 手动设置KEY_QC_CONTINUOUS_ISO。
示例:adb shell setprop persist.camera.continuous.iso 100
40) persist.camera.auto.hdr.enable
数值:0或1
功能: 手动开/关Auto HDR。
示例:adb shell setprop persist.camera.auto.hdr.enable 1
41) persist.capture.burst.exposures
数值: 非0正整数
功能: 手动设置KEY_QC_CAPTURE_BURST_EXPOSURE。
示例:adb shell setprop persist.capture.burst.exposures 10
42) persist.camera.no-display数值:0或1
功能: 手动开/关No Display Preview功能。
示例:adb shell setprop persist.camera.no-display 1
43) persist.camera.tnr_cds
数值:0或1
功能: 手动开/关TNR with CDS功能。
示例:adb shell setprop persist.camera.tnr_cds 1
44) persist.camera.tnr.video
数值:0或1
功能: 手动开/关TNR Video功能。
示例:adb shell setprop persist.camera.tnr.video 1
45) persist.camera.tnr.preview
数值:0或1
功能: 手动开/关TNR Preview功能。
示例:adb shell setprop persist.camera.tnr.preview 1
46) persist.camera.tnr.snapshot
数值:0或1
功能: 手动开/关TNR Sanpshot功能。
示例:adb shell setprop persist.camera.tnr.snapshot 1
47) persist.camera.rdi.mode
数值:0或1
功能: 手动开/关ISP的RDI接口。
示例:adb shell setprop persist.camera.rdi.mode 148) persist.camera.secure.mode
数值:0或1
功能: 手动开/关Secure模式。
示例:adb shell setprop persist.camera.secure.mode 1
49) persist.camera.zsl.interval
数值: 非0正整数
功能: 手动设置KEY_QC_ZSL_BURST_INTERVAL。
示例:adb shell setprop persist.camera.zsl.interval 1
50) persist.camera.zsl.backlookcnt
数值: 非0正整数
功能: 手动设置KEY_QC_ZSL_BURST_LOOKBACK。
示例:adb shell setprop persist.camera.zsl.backlookcnt 1
51) persist.camera.zsl.queuedepth
数值: 非0正整数
功能: 手动设置KEY_QC_ZSL_QUEUE_DEPTH。
示例:adb shell setprop persist.camera.zsl.queuedepth 1
52) persist.camera.snapshot.number
数值: 非0正整数
功能: 手动设置KEY_QC_SNAPSHOT_BURST_NUM。
示例:adb shell setprop persist.camera.snapshot.number 1
53) persist.camera.snapshot.fd
数值: 非0正整数
功能: 手动设置KEY_QC_SNAPSHOT_FD_DATA。示例:adb shell setprop persist.camera.snapshot.fd 1
54) persist.camera.mobicat
数值:0或1
功能: 手动开/关mobicat功能。
示例:adb shell setprop persist.camera.mobicat 1
55) persist.capture.burst.exposures
数值: 非0正整数
功能: 手动设置KEY_QC_CAPTURE_BURST_EXPOSURE。
示例:adb shell setprop persist.capture.burst.exposures 1
56) persist.camera.hdr.outcrop
数值:0或1
功能: 手动开/关HDR Output Crop功能。
示例:adb shell setprop persist.camera.hdr.outcrop 1
57) persist.camera.zsl.mode
数值:0或1
功能: 手动开/关ZSL模式。
示例:adb shell setprop persist.camera.zsl.mode 1
58) persist.debug.set.fixedfps
数值:0-30
功能: 手动设置相机预览的固定帧率数值。
示例:adb shell setprop persist.debug.set.fixedfps 15
59) persist.camera.zzhdr.enable
数值:0或1功能: 手动开/关Sensor Hdr功能。
示例:adb shell setprop persist.camera.zzhdr.enable 1
60) persist.camera.zzhdr.video
数值:0或1
功能: 手动开/关Video Hdr功能。
示例:adb shell setprop persist.camera.zzhdr.video 1
61) persist.camera.tintless
数值:enable/disable
功能: 手动开/关tintless功能。
示例:adb shell setprop persist.camera.tintless enable
62) persist.camera.video.CDS
数值:on/off/auto
功能: 手动设置KEY_QC_VIDEO_CDS_MODE。
示例:adb shell setprop persist.camera.video.CDS on
63) persist.camera.CDS
数值:on/off/auto
功能: 手动设置KEY_QC_CDS_MODE。
示例:adb shell setprop persist.camera.CDS on
64) persist.camera.ois.disable
数值:0或1
功能: 手动开/关ois。
示例:adb shell setprop persist.camera.ois.disable 1
65) persist.camera.set.afd数值:0-5
功能: 手动设置Antibanding模式:OFF、60HZ、50HZ、AUTO、AUTO_50HZ、AUTO_60HZ。
示例:adb shell setprop persist.camera.set.afd 1
66) persist.camera.mem.usecache
数值: 特定str
功能: 手动设置KEY_QC_CACHE_VIDEO_BUFFERS。
示例:adb shell setprop persist.camera.mem.usecache str
67) persist.denoise.process.plates
数值:0-3
功能: 手动设置降噪类型:YCBCR_PLANE、CBCR_ONLY、STREAMLINE_YCBCR、
STREAMLINED_CBCR。
示例:adb shell setprop persist.denoise.process.plates 1
68) persist.camera.snap.format
数值:1或非1
功能: 手动设置snapshot stream的YUV类型,若设置为1,则使用CAM_FORMAT
_YUV_422_NV61,设置其他数值,将使用默认的CAM_FORMAT_YUV_420_NV21格式。
示例:adb shell setprop persist.camera.snap.format 1
69) persist.camera.video.ubwc
数值:1或非1
功能: 手动设置video stream的YUV类型,若设置为1,则使用CAM_FORMAT_YUV_420_
NV12_UBWC,设置其他数值,将使用默认的CAM_FORMAT_YUV_420_NV12_VENUS格式。
示例:adb shell setprop persist.camera.video.ubwc 1
70) persist.camera.exif.rotation
数值:on/off功能: 手动开/关exif rotation。
示例:adb shell setprop persist.camera.exif.rotation on
71) persist.camera.dcrf.enable
数值:0或1
功能: 手动开/关DCRF(dual-camera-range-finding)功能。
示例:adb shell setprop persist.camera.dcrf.enable 1
72) persist.camera.eztune.enable
数值:0或1
功能: 手动开/关Eztune功能。
示例:adb shell setprop persist.camera.eztune.enable 1
73) persist.camera.is_type
数值:0-4
功能: 手动设置IS的类型:NONE、DIS、EIS_1_0、EIS_2_0。
示例:adb shell setprop persist.camera.is_type 1
74) persist.camera.preview.seemore
数值:0或1
功能: 手动开/关Preview SeeMore功能。
示例:adb shell setprop persist.camera.preview.seemore 1
75) persist.camera.offlineraw
数值:0或1
功能: 手动开/关Offline RAW功能。
示例:adb shell setprop persist.camera.offlineraw 1
76) persist.camera.multi_pass数值:0或非0
功能: 设置为0将生效,其余数值为无效数值。开启后,在Zoom触发后,将不会进行两次PP
通道的数据处理。
示例:adb shell setprop persist.camera.multi_pass 0
77) persist.camera.pp_scaling
数值:0或1
功能: 返回为1,表示使用的是CPP scaling。否则,使用VFE scaling。
示例:adb shell getprop persist.camera.pp_scaling
78) persist.camera.llnoise
数值:0或1
功能: 返回为1,表示low light noise被使能。否则,表示未使能。
示例:adb shell getprop persist.camera.llnoise
79) persist.camera.video.batchsize
数值:0-16
功能: 手动设置KEY_QC_VIDEO_BATCH_SIZE。
示例:adb shell setprop persist.camera.video.batchsize 1
80) persist.camera.longshot.stages
数值:0-4
功能: 手动设置连拍需要的buffer数目。
示例:adb shell setprop persist.camera.longshot.stages 2
81) persist.camera.llc
数值:0或1
功能: 手动开/关low light capture功能。
示例:adb shell setprop persist.camera.llc 182) persist.camera.fdvideo
数值:0或1
功能: 返回为1,表示Face Detection in Video被使能。否则,表示未使能。
示例:adb shell getprop persist.camera.fdvideo
83) persist.camera.dual.camera.dump
数值:0或1
功能: 开启后,将dump双摄像头的图片数据到/data/misc/camera/路径下。
注意: 仅在双camera的情况下有效。
示例:adb shell setprop persist.camera.dual.camera.dump 1
84) persist.camera.dual.camera.mpo
数值:0或1
功能: 是否使能双摄像头拍照图片合成。
注意: 仅在双camera的情况下有效。
示例:adb shell setprop persist.camera.dual.camera.mpo 1
85) persist.camera.aux.camera
数值:0或1
功能: 使能后,AUX摄像头将在"逻辑"上面可见,即对用户可见。若不使能,则物理上是两个摄像头
,但对用户来说相当于只有一个摄像头。
注意: 仅在双camera的情况下有效。
示例:adb shell setprop persist.camera.aux.camera 1
86) persist.camera.dc.frame.sync
数值:0或1
功能: 手动开/关双摄像头帧同步功能。注意: 仅在双camera的情况下有效。
示例:adb shell setprop persist.camera.dc.frame.sync 1
87) persist.camera.HAL3.enabled
数值:0或1
功能: 开启后,将使用HAL3。
示例:adb shell setprop persist.camera.HAL3.enabled 1
88) persist.camera.dual.camera
数值:0或1
功能: 手动开/关双摄像头模式。
示例:adb shell setprop persist.camera.dual.camera 1
89) persist.camera.perflock.enable
数值:0或1
功能:
示例:
90) persist.camera.perflock.enable
数值:0或1
功能:
示例:
91) persist.camera.disp.num_vsync
数值:
功能:display tuning相关。
示例:
92) persist.camera.disp.ms_to_vsync数值:
功能:display tuning相关。
示例:
93) persist.camera.disp.filter_max
数值:
功能:display tuning相关。
示例:
94) persist.camera.disp.filter_min
数值:
功能:display tuning相关。
示例:
95) persist.camera.disp.fps
数值:
功能:display tuning相关。
示例:
96) persist.camera.dumpmetadata
数值:0或1
功能: 使能后,将dump ZSL/Capture/Snapshot channel中的Metadata到/data/misc/camera/路径下
。
示例:adb shell setprop persist.camera.dumpmetadata 1






>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
解除adb验证：
device/qcom/common/base.mk
PRODUCT_DEFAULT_PROPERTY_OVERRIDES+= \
ro.adb.secure=1	 改成   ro.adb.secure=0


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
例程：
Linux中变量#,
@,0,
1,2,
*,$$,$?的含义

	
$# 是传给脚本的参数个数
$0 是脚本本身的名字
$1 是传递给该shell脚本的第一个参数
$2 是传递给该shell脚本的第二个参数
$@ 是传给脚本的所有参数的列表
$* 是以一个单字符串显示所有向脚本传递的参数，与位置变量不同，参数可超过9个
$$ 是脚本运行的当前进程ID号
$? 是显示最后命令的退出状态，0表示没有错误，其他表示有错误

区别：@

*
    相同点：都是引用所有参数
    不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数（分别存储在12 3）则"*" 等价于 "12 3"（传递了一个参数）；而"@" 等价于 "1""
    2" "$3"（传递了三个参数）

例子一
复制代码

##dels.sh
echo "number:$#"
echo "scname:$0"
echo "first :$1"
echo "second:$2"
echo "argume:$@"
echo "show parm list:$*"
echo "show process id:$$"
echo "show precomm stat: $?"

复制代码

执行结果
	
[@jihite]$ sh del.sh 1 2 3
number:3
scname:del.sh
first: 1
second:2
argume:1 2 3
show parm list:1 2 3
show process id:21057
show precomm stat: 0
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


编译内核defconfig

make -C kernel-3.10 O=/home/qiancheng/mt6735/out/target/product/cb04_6735_35u/obj/KERNEL_OBJ ARCH=arm CROSS_COMPILE=/home/qiancheng/mt6735/prebuilts/gcc/linux-x86/arm/arm-eabi-4.8/bin/arm-eabi- ROOTDIR=/home/qiancheng/mt6735  cb04_6735_35u_gz_hg_debug_defconfig

make O=out1/ ARCH=arm cb04_6735_35u_defconfig
make O=out1/  menuconfig

编译system.img

Homebox
make_ext4fs -s -S out/target/product/msm8610/root/file_contexts -l 838860800 -a system out/target/product/msm8610/obj/PACKAGING/systemimage_intermediates/system.img out/target/product/msm8610/system

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
md5校验
md5sum files.zip

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
远程adb抓取LOG

    远程adb调试方式：
        1) 手机和电脑处于同一局域网
        2) 使用USB线连接手机，输入命令： adb tcpip 5555
        3) 拔出USB，出入命令： adb connect <手机的IP>
        4) 需要断开连接：adb disconnect <手机的IP>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
linux创建文件节点proc/

gt1x_debug_proc_entry = proc_create(GT1X_DEBUG_PROC_FILE, 0660, NULL, &gt1x_debug_fops);

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

cmpxchg(void *ptr, unsigned long old, unsigned long new);
函数完成的功能是：将old和ptr指向的内容比较，如果相等，则将new写入到ptr中，返回old，如果不相等，则返回ptr指向的内容。
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
???????????? no permissions
sudo vi /etc/udev/rules.d/70-android.rules
SUBSYSTEM=="usb", ATTRS{idVendor}=="0b05", MODE="0666" 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
如果是s600就不运行下面的
ifeq (, $(filter s600, $(TARGET_PRODUCT)))
endif

q@pc:~/project/_4_4_Qrd892x_new/vendor/qcom/proprietary$ find . -name Android.mk | xargs grep "(filter"
./bt/hci_qcomm_init/Android.mk:ifneq (, $(filter d508 d508_b d508_c g55 g55c s55 c580 d801, $(TARGET_PRODUCT)))
./bt/hci_qcomm_init/Android.mk:ifneq (, $(filter d508 d508_b d508_c g55 g55c s55 c580 d801, $(TARGET_PRODUCT)))


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

ADB over Wi-Fi
1. Connect the device to Wi-Fi.
2. In device settings, go to Wi-Fi /WLAN.
3. Select the network name to get the IP address.
4. Connect the PC to the same wireless network.
5. Connect the PC to the device via USB and do the following:
adb shell "setprop persist.adb.tcp.port 5555"
adb tcpip 5555
6. Disconnect USB from the device and do the following:
adb connect <device’s IP address>
adb shell

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
board id -- bootable/bootloader/lk/target/s600/init.c
void target_detect(struct board_data *board)
{
        board->platform_hw = 0x11;
        board->platform_subtype = 0x05;
	/*
	* already fill the board->target on board.c
	*/
}



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
kernel/drivers/platform/msm/qpnp-haptic.c

adb root
<wait briefly>
adb shell
mount –t debugfs none /sys/kernel/debug
cd /sys/kernel/debug/spmi/spmi-0

adb root
<wait briefly>
adb shell
mount –t debugfs none /sys/kernel/debug
cd /sys/kernel/debug/regmap/spmi0-02


ADB over WiFi
1. Connect the device to Wi-Fi.
2. In device settings, go to Wi-Fi /WLAN.
3. Select the network name to get the IP address.
4. Connect the PC to the same wireless network.
5. Connect the PC to the device via USB and do the following:
adb shell "setprop persist.adb.tcp.port 5555"
adb tcpip 5555
6. Disconnect USB from the device and do the following:
adb connect <device’s IP address>
adb 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
MSM8996电源控制 ldo控制
./drivers/regulator/rpm-smd-regulator.c
EXPORT_SYMBOL(rpm_regulator_get);
EXPORT_SYMBOL(rpm_regulator_put);
EXPORT_SYMBOL(rpm_regulator_enable);
EXPORT_SYMBOL(rpm_regulator_disable);
EXPORT_SYMBOL(rpm_regulator_set_voltage);
EXPORT_SYMBOL(rpm_regulator_set_mode);

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
更改HDMI分辨率
Solution Number	00019982
Solution Title	Dynamic change HDMI resolution by ABD
Solution Details	
Question:
How to dynamic change HDMI output resolution by ADB?
Answer:
1. adb shell setprop enable.hdmi.edid 1 (enables dynamic switching)
2. adb shell setprop hdmi.yRes 480 (or can be 720/576).
3. Turn off/on the HDMI user option.
After this the HDMI TV should show the new resolution set.
See the logs to verify the new resolution.


//////////////////////////////////////////////////
Solution Number	00028359
Solution Title	How to force HDMI resolution on Android?
Solution Details	

The HDMI resolution can be force changed using adb as below. Note this applies to HDMI as secondary display , for HDMI primary currently the resolution is set to 1080p
Step 1: Pulling "build.prop" file from android device
1. C:\> adb pull /system/build.prop c:/


Step 2: Modifying the "build.prop" to force HDMI resolution
1. Open "build.prop" and add "hw.hdmi.resolution" property if it does not exist .
2. To set the resolution to 1080p, change "hw.hdmi.resolution=16"
3. Save the file

Step 3: Pushing "build.prop" file to android device
1. C:\> adb root
2. C:\> adb remount
3. C:\> adb push build.prop /system/
4. C:\> adb shell chmod 644 /system/build.porp
5. C:\> adb reboot. 

To force the resolution to other than 1080p
"hw.hdmi.resolution=NUMBER"

Where NUMBER is defined as below.
1 => m640x480p60_4_3
2 => m720x480p60_4_3
3 => m720x480p60_16_9
4 => m1280x720p60_16_9
5 => m1920x1080i60_16_9
6 => m1440x480i60_4_3
7 => m1440x480i60_16_9
16 => m1920x1080p60_16_9
17 => m720x576p50_4_3
18 =>m720x576p50_16_9
19 => m1280x720p50_16_9
21 => m1440x576i50_4_3
22 =>m1440x576i50_16_9
31 => m1920x1080p50_16_9
32 => m1920x1080p24_16_9
33 => m1920x1080p25_16_9
34 => m1920x1080p30_16_9

//////////////////////////////////////////////////

Solution Number	00018214
Solution Title	HDMI dynamic resolution chage using adb
Solution Details	
The foll steps will help to change the resolution dynamically on HDMI:

Step1) adb root
Step2) adb shell
Step3) cd /sys/class/graphics/fb2 ( please check whether HDMI is on fb1 or fb2 and change accordingly ) . On my device it was fb2
Step4) cat edid_modes
( This will show all the existing modes present and supported by the TV

the number to mapping is present in kernel/include/video/msm_hdmi_modes.h
Step5) To change the resolution, choose the mode you want to change to

For example,

to change to HDMI_VFRMT_720x480p60_16_9 3

you have to do the foll command:

adb shell setprop hw.hdmi.resolution 3

Step6) Now disconnect the HDMI cable and re-connect it

Wait for a few seconds and then the TV will change to the resolution you selected in step(5)

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
modem build version(gps)
modem_proc/build/ms/build_parms_8996.gps.prod.py

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
q@pc:~/project/lipeng/mt6735/build$ adb shell getprop | grep adb
[init.svc.adbd]: [running]
[persist.sys.usb.config]: [diag,serial_cdev,serial_tty,rmnet_ipa,mass_storage,adb]
[sys.usb.config]: [diag,serial_cdev,serial_tty,rmnet_ipa,mass_storage,adb]
[sys.usb.state]: [diag,serial_cdev,serial_tty,rmnet_ipa,mass_storage,adb]

q@pc:~/project/lipeng/mt6735/build$ adb shell getprop | grep adb
[init.svc.adbd]: [running]
[persist.sys.usb.config]: [diag,serial_cdev,serial_tty,rmnet_ipa,mass_storage,adb]
[sys.usb.config]: [mtp,adb]
[sys.usb.state]: [mtp,adb]

adb shell setprop sys.usb.config mtp,adb
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
使能关机充电charging
http://192.167.100.232:8080/#/c/9709/1/app/aboot/aboot.c
#if defined(MSM_S55_USB_CHARGE) || defined(MSM_G55_USB_CHARGE) || defined(MSM_C580_USB_CHARGE) || defined(MSM_D508_USB_CHARGE)
	if (target_pause_for_battery_charge())
		device.charger_screen_enabled = 1;
#endif

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
进入快速工厂模式
misc.img ffbm-00


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

查显示HDMI信息display信息
adb shell dumpsys SurfaceFlinger
看刷新率
adb shell dumpsys SurfaceFlinger | grep -i refresh-rate
adb shell dumpsys SurfaceFlinger | grep -i refresh-rate

HDMI支持的分辨率
adb shell cat /sys/class/graphics/fb1/modes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
camera 效果文件重新加载,调试
adb root
adb remount
adb push libchromatix_s5k2p7sx_snapshot.so /system/vendor/lib
adb shell stop media
adb shell start media
adb shell stop qcamerasvr
adb shell start qcamerasvr
adb shell sync
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
wifi FTM (APQ8096_QCA6174A)

#!/bin/bash

wlan_path="/system/lib/modules/wlan.ko"
wlan_ko="wlan"

if [ ! -f "$wlan_path" ]; then
	echo "wlan.ko doesn't exist, make sure the platform and chip!"
	exit 0
fi

has_in=`lsmod | grep $wlan_ko | grep $wlan_ko`
if [ "$has_in" != "" ]; then
	echo "rmmod wlan"
	rmmod wlan
fi

str=`ps | grep ptt`
ptt_uid=${str:7:9}
ptt_uid_len=${#ptt_uid}
#echo "ptt_uid:$ptt_uid, ptt_uid_len:$ptt_uid_len"
if [ $ptt_uid_len -eq '0' ]; then
	echo "not find ptt_socket_app uid"
else
	kill $ptt_uid
	echo "kill ptt_socket_app"
fi

insmod /system/lib/modules/wlan.ko con_mode=5
sleep 1
echo "insmod /system/lib/modules/wlan.ko con_mode=5"

ftmdaemon -n
echo "start ftmdaemon -n"

#iwpriv wlan0 ftm 1 #start ftm
#echo "iwpriv wlan0 ftm 1"



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
lsusb -d 05c6:9091 -v   > lsusb2.txt



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
HDMI显示
adb reboot bootloader
fastboot oem select-display-panel hdmi  //这条指令会造成横屏,默认不做这个操作本身就是竖屏
fastboot reboot 

mdss_mdp.panel=1:dsi:0:qcom,mdss_dsi_ili9885_1080p_video:1:none
fastboot oem select-display-panel mdss_dsi_ili9885_1080p_video

hdmi横屏
#set hdmi display portrait (rotates 90 degrees)
persist.demo.hdmirotation=portrait
frameworks/base/services/core/java/com/android/server/policy/PhoneWindowManager.java

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
git 忽略文件
git update-index --assume-unchanged <PATH>
<PATH>是需要忽略的文件



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
adsp/slpi sensor调试
adb root
adb wait-for-device
adb shell mount -o remount,rw /firmware
adb shell rm /firmware/image/slpi*   
adb push <location of SLPI binaries> /firmware/image
adb shell sync
adb reboot 


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
camera dump抓图像
adb shell chmod 777 /data
adb shell setprop persist.camera.dumpimg 655615

root@cb09:/ # ls -l data/misc/camera/                                          
-rw-r--r-- media    audio      447771 2017-01-01 09:35 0_16777216.jp
-rw-r--r-- media    audio     1417760 2017-01-01 09:36 1_16842752.jp
-rw-r--r-- media    audio     2353280 2017-01-01 09:34 201701010934550p_1440x1080_4512.yuv
-rw-r--r-- media    audio     2353280 2017-01-01 09:34 201701010934551p_1440x1080_4513.yuv
-rw-r--r-- media    audio     2353280 2017-01-01 09:34 201701010934552p_1440x1080_4514.yuv
-rw-r--r-- media    audio     2353280 2017-01-01 09:34 201701010934553p_1440x1080_4515.yuv
-rw-r--r-- media    audio     2353280 2017-01-01 09:34 201701010934554p_1440x1080_4516.yuv
-rw-r--r-- media    audio     2353280 2017-01-01 09:34 201701010934555p_1440x1080_4517.yuv


[]camera debug
80-NL239-33SC_Camera Debugging Guide (Simplified Chinese).pdf

kba-170501033706_pdaf_tuning_note.pdf
adb shell setprop persist.vendor.camera.global.debug  5 //1     ///    persist.camera.global.debug 1
adb shell setprop persist.camera.pdaf_logging 1
adb shell setprop persist.camera.pdaf_dump 1
adb shell setprop persist.camera.pdaf_profiling 1
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
grep忽略
grep -E "http"  . -R --exclude-dir={.git,res,bin}
grep -nr --exclude-dir={out,.repo,.git} cam_cds_mode_type_t .

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
adb shell setprop service.adb.root 1
adb wait-for-device
adb shell setenforce 0

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
WIFI MAC

地址到 /persist/wlan_mac.bin, 下面是格式, 符合格式就可以了

Intf0MacAddress=00037faabb00

Intf1MacAddress=08037faabbdd

END

80-Y7674-2 文档
设置BT MAC

关闭蓝牙功能

adb shell rm persist/bluetooth/.bt_nv.bin

adb shell btnvtool -b 22.22.22.22.22.22

打开蓝牙功能即生效

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
jack-admin list-server
jack-admin kill-server

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
github
Username for 'https://github.com': qqcc0000
q***q**C19**

echo "# test" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/qqcc0000/test.git
git push -u origin master


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
设置抓ramdump进data目录
setprop persist.sys.ssr.enable_ramdumps 1
在线ramdump, QCAP入门指南
80-NR964-54SC版本F
https://cap.qti.qualcomm.com/default.aspx
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
./cts-tradefed run cts -m CtsKeystoreTestCases -disable-reboot --skip-preconditions

7.0的cts测试命令
run cts –m CtsAppTestCases  –t Android.app.cts.ActionBarTest#testAddTab --skip-preconditions

run cts -m android.hardware.camera2.cts.BurstCaptureTest -t testYuvBurst
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
cb09 msm8996开机电压
a/boot_images/QcomPkg/Library/PmicLib/config/msm8996/pm_config_target.c
+++ b/boot_images/QcomPkg/Library/PmicLib/config/msm8996/pm_config_target.c
@@ -120,7 +120,7 @@ smbchg_specific_data[1] =
       {4200,                                             PM_DISABLE_CONFIG },  //Float Voltage
       {2100,                                             PM_DISABLE_CONFIG },  //USBIN Input Current Limit
       {1000,                                             PM_DISABLE_CONFIG },  //DCIN Input Current Limit
-      3600,                                                                    //bootup_battery_theshold_mv
+      3400,                                                                    //bootup_battery_theshold_mv
       3800,                                                                    //wipowr bootup battery thesholdmv
       3050,                                                                    //apsd_reset_threshold_mv:  APSD reset only applicable if initial Vbatt level is less than th
       2800,                                                                    //apsd_reset_theshold_no_uvlo_mv: Used if last reset reason is NOT UVLO



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
查看分区格式
root@CB03:/ # mount                                                            
rootfs / rootfs ro,relatime 0 0
tmpfs /dev tmpfs rw,seclabel,nosuid,relatime,size=975336k,nr_inodes=157942,mode=755 0 0
devpts /dev/pts devpts rw,seclabel,relatime,mode=600 0 0
proc /proc proc rw,relatime 0 0
sysfs /sys sysfs rw,seclabel,relatime 0 0
selinuxfs /sys/fs/selinux selinuxfs rw,relatime 0 0
debugfs /sys/kernel/debug debugfs rw,relatime 0 0
none /acct cgroup rw,relatime,cpuacct 0 0
none /sys/fs/cgroup tmpfs rw,seclabel,relatime,size=975336k,nr_inodes=157942,mode=750,gid=1000 0 0
tmpfs /mnt/asec tmpfs rw,seclabel,relatime,size=975336k,nr_inodes=157942,mode=755,gid=1000 0 0
tmpfs /mnt/obb tmpfs rw,seclabel,relatime,size=975336k,nr_inodes=157942,mode=755,gid=1000 0 0
none /dev/cpuctl cgroup rw,relatime,cpu 0 0
adb /dev/usb-ffs/adb functionfs rw,relatime 0 0
/dev/block/bootdevice/by-name/system /system ext4 rw,seclabel,relatime,data=ordered 0 0
/dev/block/bootdevice/by-name/userdata /data ext4 rw,seclabel,nosuid,nodev,relatime,discard,noauto_da_alloc,data=ordered 0 0
/dev/block/bootdevice/by-name/cache /cache ext4 rw,seclabel,nosuid,nodev,relatime,data=ordered 0 0
/dev/block/bootdevice/by-name/persist /persist ext4 rw,seclabel,nosuid,nodev,relatime,data=ordered 0 0
/dev/block/bootdevice/by-name/modem /firmware vfat ro,context=u:object_r:firmware_file:s0,relatime,uid=1000,gid=1000,fmask=0337,dmask=0227,codepage=437,iocharset=iso8859-1,shortname=lower,errors=remount-ro 0 0
/dev/fuse /storage/uicc0 fuse rw,nosuid,nodev,noexec,relatime,user_id=1023,group_id=1023,default_permissions,allow_other 0 0
/dev/fuse /mnt/shell/emulated fuse rw,nosuid,nodev,noexec,relatime,user_id=1023,group_id=1023,default_permissions,allow_other 0 0
/dev/fuse /mnt/shell/emulated/0 fuse rw,nosuid,nodev,noexec,relatime,user_id=1023,group_id=1023,default_permissions,allow_other 0 0

分区大小分区空间:
root@CB03:/ # df
Filesystem               Size     Used     Free   Blksize
/persist                27.5M   184.0K    27.3M   4096

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
log显示tag
git log --decorate



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
查看内存参数 
sudo dmidecode -t memory


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
调试wakeup问题，可以使能debug功能，然后抓取log。Log中会增加一些debug信息。
mount -t debugfs none /sys/kernel/debug  
echo 1 > /sys/kernel/debug/clk/debug_suspend  
echo 1 > /sys/module/msm_show_resume_irq/parameters/debug_mask  
echo 4 > /sys/module/wakelock/parameters/debug_mask  
echo 1 > /sys/module/lpm_levels/parameters/debug_mask  
echo 0x16 > /sys/module/smd/parameters/debug_mask  



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
1. 如果你只想看文件的前100行，可以使用head命令，如
head -100  filename
2. 如果你想查看文件的后100行，可以使用tail命令，如：
tail -100  filename 或 tail -n 100  filename
3. 查看文件中间一段，你可以使用sed命令，如：
sed -n '100,200p' filename 

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
EXIF 3A信息msm8996
adb root
adb remount
adb shell setprop persist.camera.mobicat 2
adb shell setprop persist.vendor.camera.global.debug  1   /// persist.camera.global.debug 1
adb shell setprop persist.camera.stats.debugexif 4128768

msm8953
方法一： chromatix工具 -> Tools -> Enable 3A Debug
方法二： adb shell setprop persist.camera.mobicat 2
         adb shell setprop persist.camera.global.debug 1
         adb shell setprop persist.camera.stats.debug 4294901760
         adb shell setprop persist.camera.stats.debugexif 4294901760
最后，导出的图片用chromatix工具打开，就能查看图片相应的3A信息。


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
修改应用进程权限,修改用户组, 除了init.rc等还如下
system/core/libcutils/fs_config.c
 { 06755, AID_ROOT,      AID_ROOT,      0, "system/xbin/su" },


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
video codec视频解码缩小分辨率

(1) please check whether there is the property of vidc.dec.enable.downscalar, if yes, please set the value to "1".

(2)adb root
adb shell setprop vidc.dec.downscalar_width 2560
adb shell setprop vidc.dec.downscalar_height 1600
// I can't confirm 2560*1600 is your 2K resolution, please set them as your requirement.

But it is set to 1080P by defaul.
adb shell setprop vidc.dec.downscalar_width 1920
adb shell setprop vidc.dec.downscalar_height 1088 


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
打包userdata.img 1Gb大小(1073741824)
mkuserimg.sh -s out/target/product/msm8953_32/data out/target/product/msm8953_32/userdata.img ext4 data 1073741824 -D out/target/product/msm8953_32/system -L data out/target/product/msm8953_32/root/file_contexts.bin
make_ext4fs -s -T -1 -S out/target/product/msm8953_32/root/file_contexts.bin -L data -l 1073741824 -a data out/target/product/msm8953_32/userdata.img out/target/product/msm8953_32/data out/target/product/msm8953_32/system

打包persist
make_ext4fs -s -T -1 -l 33554432 -a persist out/target/product/msm8953_32/persist.img out/target/product/msm8953_32/persist

打包cache
mkuserimg.sh -s out/target/product/msm8953_32/cache out/target/product/msm8953_32/cache.img ext4 cache 268435456 -D out/target/product/msm8953_32/system -L cache out/target/product/msm8953_32/root/file_contexts.bin
make_ext4fs -s -T -1 -S out/target/product/msm8953_32/root/file_contexts.bin -L cache -l 268435456 -a cache out/target/product/msm8953_32/cache.img out/target/product/msm8953_32/cache out/target/product/msm8953_32/system

打包system.img
mkuserimg.sh -s out/target/product/msm8953_32/system out/target/product/msm8953_32/obj/PACKAGING/systemimage_intermediates/system.img ext4 system 3170938880 -D out/target/product/msm8953_32/system -L system out/target/product/msm8953_32/root/file_contexts.bin
make_ext4fs -s -T -1 -S out/target/product/msm8953_32/root/file_contexts.bin -L system -l 3170938880 -a system out/target/product/msm8953_32/obj/PACKAGING/systemimage_intermediates/system.img out/target/product/msm8953_32/system out/target/product/msm8953_32/system

打包oem.img
mkuserimg.sh -s out/target/product/msm8953_32/oem out/target/product/msm8953_32/oem.img ext4 oem 268435456 -D out/target/product/msm8953_32/system -L oem out/target/product/msm8953_32/root/file_contexts.bin
make_ext4fs -s -T -1 -S out/target/product/msm8953_32/root/file_contexts.bin -L oem -l 268435456 -a oem out/target/product/msm8953_32/oem.img out/target/product/msm8953_32/oem out/target/product/msm8953_32/system
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CB05去掉关机对话框
adb shell setprop service.adb.root 1
adb shell setenforce 0
adb shell setprop persist.sys.powerkey.behavior 3
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
每次重新获取camera number
MSM8909/platform/frameworks/av / services/camera/libcameraservice/CameraService.cpp
if (mNumberOfCameras == 0) {
        ALOGE("No Camera be Found! check again");
        onFirstRef();
    }
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
QCamera2/HAL3/QCamera3Channel.cpp:540:    property_get("persist.vendor.camera.dumpimg", prop, "0");
QCamera2/HAL3/QCamera3Channel.cpp:645:    property_get("debug.gralloc.gfx_ubwc_disable", value, "0");
QCamera2/HAL3/QCamera3Channel.cpp:654:    property_get("persist.vendor.camera.eztune.enable", value, "0");
QCamera2/HAL3/QCamera3Channel.cpp:702:            property_get("persist.vendor.camera.preview.ubwc", prop, "1");
QCamera2/HAL3/QCamera3Channel.cpp:850:    property_get("persist.vendor.debug.sf.showfps", prop, "0");
QCamera2/HAL3/QCamera3Channel.cpp:2602:    property_get("persist.vendor.camera.raw.debug.dump", prop, "0");
QCamera2/HAL3/QCamera3Channel.cpp:2824:    property_get("persist.vendor.camera.raw.dump", prop, "0");
QCamera2/HAL3/QCamera3Channel.cpp:4638:    property_get("persist.vendor.camera.mpo.disabled",prop,"0");
QCamera2/HAL3/QCamera3Stream.cpp:455:    property_get("persist.vendor.camera.cache.optimize", value, "1");
QCamera2/HAL3/QCamera3HWI.cpp:530:    property_get("persist.vendor.camera.raw.dump", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:532:    property_get("persist.vendor.camera.hal3.force.hdr", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:542:    property_get("persist.vendor.camera.tnr.preview", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:546:    property_get("persist.vendor.camera.swtnr.preview", prop, "1");
QCamera2/HAL3/QCamera3HWI.cpp:550:    property_get("persist.vendor.camera.tnr.video", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:554:    property_get("persist.vendor.camera.avtimer.debug", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:559:    property_get("persist.vendor.camera.cacmode.disable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:924:    property_get("persist.vendor.camera.fdleak.enable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:932:    property_get("persist.vendor.camera.memleak.enable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:1024:    property_get("service.bootanim.exit", value, "0");
QCamera2/HAL3/QCamera3HWI.cpp:1153:    property_get("service.bootanim.exit", value, "0");
QCamera2/HAL3/QCamera3HWI.cpp:1550:    property_len = property_get("persist.vendor.camera.hal3.feature",
QCamera2/HAL3/QCamera3HWI.cpp:1553:    property_len = property_get("persist.vendor.camera.hal3.feature",
QCamera2/HAL3/QCamera3HWI.cpp:2083:    property_get("persist.vendor.camera.eis.enable", eis_prop, "1");
QCamera2/HAL3/QCamera3HWI.cpp:2217:    property_get("vendor.debug.camera.tnr.forceenable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:2407:    property_get("persist.vendor.camera.is_type", is_type_value, "4");
QCamera2/HAL3/QCamera3HWI.cpp:4049:                    property_get("persist.vendor.camera.dumpmetadata", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:4500:    property_get("persist.vendor.camera.sensor.hdr", property, "0");
QCamera2/HAL3/QCamera3HWI.cpp:5209:        property_get("persist.vendor.camera.is_type", is_type_value, "4");
QCamera2/HAL3/QCamera3HWI.cpp:5212:        property_get("persist.vendor.camera.is_type_preview", is_type_value, "4");
QCamera2/HAL3/QCamera3HWI.cpp:5222:            property_get("persist.vendor.camera.vfe1.reservedrdi", value, "-1");
QCamera2/HAL3/QCamera3HWI.cpp:5318:            property_get("persist.vendor.camera.halpp", PP_prop, "");
QCamera2/HAL3/QCamera3HWI.cpp:5347:        property_get("persist.vendor.camera.tintless.enable", prop, "1");
QCamera2/HAL3/QCamera3HWI.cpp:9070:    property_get("persist.vendor.camera.quadcfa.id", prop, "");
QCamera2/HAL3/QCamera3HWI.cpp:9080:        property_get("persist.vendor.camera.quadcfa.pic_size", prop, "quarter");
QCamera2/HAL3/QCamera3HWI.cpp:9650:    property_get("persist.vendor.camera.eis.enable", eis_prop, "1");
QCamera2/HAL3/QCamera3HWI.cpp:9686:    property_get("persist.vendor.camera.facedetect", prop, "1");
QCamera2/HAL3/QCamera3HWI.cpp:9747:    property_get("persist.vendor.camera.input.minsize", prop, "2592x1944");
QCamera2/HAL3/QCamera3HWI.cpp:9937:    property_get("persist.vendor.camera.hal3hfr.enable", prop, "1");
QCamera2/HAL3/QCamera3HWI.cpp:11190:    property_get("persist.vendor.camera.ois.disable", ois_prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:11196:    property_get("persist.vendor.camera.ois.video", videoOisProp, "1");
QCamera2/HAL3/QCamera3HWI.cpp:11566:    property_get("persist.vendor.camera.CDS", prop, "Off");
QCamera2/HAL3/QCamera3HWI.cpp:12240:    property_get("persist.vendor.camera.af.infinity", af_value, "0");
QCamera2/HAL3/QCamera3HWI.cpp:12285:                property_get("persist.vendor.camera.set.afd", prop, "5");
QCamera2/HAL3/QCamera3HWI.cpp:13447:    property_get("persist.vendor.camera.fdleak.enable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:13455:    property_get("persist.vendor.camera.memleak.enable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:13480:    property_get("persist.vendor.denoise.process.plates", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:13510:    property_get("persist.vendor.tnr.process.plates", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:13650:        property_get("persist.vendor.camera.sensor.hdr", sensor_hdr_prop, "3");
QCamera2/HAL3/QCamera3HWI.cpp:13652:        property_get("persist.vendor.camera.sensor.hdr", sensor_hdr_prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:13784:    property_get("persist.vendor.camera.exif.rotation", exifRotation, "off");
QCamera2/HAL3/QCamera3HWI.cpp:13790:    property_get("persist.vendor.camera.lib2d.rotation", exifRotation, "off");
QCamera2/HAL3/QCamera3HWI.cpp:13933:    property_get("persist.vendor.camera.mobicat", value, "0");
QCamera2/HAL3/QCamera3HWI.cpp:13971:    property_get("persist.vendor.camera.hal.debug", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:13977:    property_get("persist.vendor.camera.kpi.debug", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:13980:    property_get("persist.vendor.camera.global.debug", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:14555:        property_get("persist.vendor.camera.instant.aec", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:14568:            property_get("persist.vendor.camera.ae.instant.bound", prop, "10");
QCamera2/HAL3/QCamera3HWI.cpp:14719:        property_get("persist.vendor.camera.sat.enable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:14734:        property_get("persist.vendor.camera.sac.enable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:14750:        property_get("persist.vendor.camera.rtbdm.enable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:14763:        property_get("persist.vendor.camera.rtb.enable", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:14834:    property_get("persist.vendor.camera.stats.test.2outs", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:14918:        property_get("persist.vendor.dualcam.lpm.main", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:14922:        property_get("persist.vendor.dualcam.lpm.aux", prop, "0");
QCamera2/HAL3/QCamera3HWI.cpp:15329:    property_get("persist.vendor.dualcam.defer.enable", prop, "1");
QCamera2/HAL3/QCamera3HWI.cpp:15371:    property_get("persist.vendor.dualcam.lpm.enable", prop, "1");
QCamera2/HAL3/QCamera3PostProc.cpp:3979:    if (property_get("ro.product.manufacturer", value, "QCOM-AA") > 0) {
QCamera2/HAL3/QCamera3PostProc.cpp:3986:    if (property_get("ro.product.model", value, "QCAM-AA") > 0) {
QCamera2/HAL3/QCamera3PostProc.cpp:3993:    if (property_get("ro.build.description", value, "QCAM-AA") > 0) {
QCamera2/stack/mm-camera-interface/src/mm_camera_interface.c:2482:    property_get("persist.vendor.camera.expose.aux", prop, "0");
QCamera2/stack/mm-camera-interface/src/mm_camera_interface.c:2653:    property_get("vold.decrypt", prop, "0");
QCamera2/stack/mm-camera-interface/src/mm_camera.c:2734:    property_get(cam_loginfo[i].prop, property_value, default_value);
QCamera2/stack/mm-camera-interface/src/mm_camera.c:2770:    property_get("persist.vendor.camera.debug.assert", property_value, "0");
QCamera2/stack/mm-camera-interface/src/mm_camera.c:2775:      property_get("persist.vendor.camera.debug.logfile", property_value, "0");
QCamera2/stack/mm-jpeg-interface/src/mm_jpeg.c:2408:  property_get("persist.vendor.camera.lib2d.rotation", prop, "off");
QCamera2/stack/mm-jpeg-interface/src/mm_jpeg_interface.c:334:  property_get("persist.vendor.camera.kpi.debug", prop, "0");
QCamera2/stack/mm-camera-test/src/mm_qcamera_preview.c:350:    property_get("persist.vendor.camera.dumpimg", value, "0");
QCamera2/util/QCameraBokeh.cpp:198:    property_get("persist.vendor.camera.bokeh.debug", prop, "0");
QCamera2/util/QCameraBokeh.cpp:650:    property_get("persist.vendor.camera.ddm.config", prop, "");
QCamera2/util/QCameraBokeh.cpp:661:    property_get("persist.vendor.camera.bokeh.ddmmode", prop, "");
QCamera2/util/QCameraCommon.cpp:296:    if (property_get("vendor.video.disable.ubwc", prop, "") > 0) {
QCamera2/util/QCameraCommon.cpp:300:    if (property_get("video.disable.ubwc", prop, "") > 0){
QCamera2/util/QCameraCommon.cpp:409:    property_get("persist.vendor.camera.isp.analysis_en", prop, "1");
QCamera2/util/QCameraDisplay.cpp:254:        property_get("persist.vendor.camera.disp.num_vsync", value, "4");
QCamera2/util/QCameraDisplay.cpp:256:        property_get("persist.vendor.camera.disp.ms_to_vsync", value, "2");
QCamera2/util/QCameraDisplay.cpp:258:        property_get("persist.vendor.camera.disp.filter_max", value, "2");
QCamera2/util/QCameraDisplay.cpp:260:        property_get("persist.vendor.camera.disp.filter_min", value, "4");
QCamera2/util/QCameraDisplay.cpp:262:        property_get("persist.vendor.camera.disp.fps", value, "60");
QCamera2/util/QCameraDualFOVPP.cpp:301:    property_get("persist.vendor.camera.dualfov.dumpimg", prop, "0");
QCamera2/util/QCameraClearSight.cpp:281:    property_get("persist.vendor.camera.dualfov.dumpimg", prop, "0");
QCamera2/util/QCameraPerf.cpp:661:        property_get("persist.vendor.camera.perflock.enable", value, "1");
QCamera2/util/QCameraPerf.cpp:677:                    if ((property_get("ro.vendor.extension_library", value, NULL) > 0) &&
QCamera2/util/QCameraFOVControl.cpp:141:                property_get("persist.vendor.dualcam.lpm.enable", prop, "1");
QCamera2/util/QCameraFOVControl.cpp:1943:        property_get("persist.vendor.camera.sac.enable", propSAC, "0");
QCamera2/util/QCameraFOVControl.cpp:1944:        property_get("persist.vendor.camera.sat.enable", propSAT, "0");
QCamera2/util/QCameraTrace.h:143:    property_get("persist.vendor.camera.kpi.camscope", prop, "0"); \
QCamera2/util/QCameraTrace.h:149:    property_get("persist.vendor.camera.kpi.camscope_cnt", prop, "0"); \
QCamera2/QCamera2Factory.cpp:87:    property_get("persist.vendor.camera.HAL3.enabled", prop, "1");
QCamera2/QCamera2Factory.cpp:95:    property_get("persist.vendor.camera.dual.camera", prop, propDefault);
QCamera2/HAL/QCameraParameters.cpp:933:    property_get("persist.vendor.camera.imglib.oemfeat1", value, "0");
QCamera2/HAL/QCameraParameters.cpp:1055:    property_get("persist.vendor.debug.sf.showfps", value, "0");
QCamera2/HAL/QCameraParameters.cpp:1061:    property_get("persist.vendor.camera.thermal.mode", value, "fps");
QCamera2/HAL/QCameraParameters.cpp:1073:    property_get("persist.vendor.camera.ltmforseemore", value, "1");
QCamera2/HAL/QCameraParameters.cpp:1627:        property_get("persist.vendor.camera.aux.preview.size", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:1714:        property_get("persist.vendor.camera.aux.picture.size", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:1901:    property_get("persist.vendor.camera.opt.livepic", value, "1");
QCamera2/HAL/QCameraParameters.cpp:2012:    property_get("persist.vendor.camera.liveshot.size", value, "");
QCamera2/HAL/QCameraParameters.cpp:2080:            property_get("persist.vendor.camera.preview.ubwc", prop, "1");
QCamera2/HAL/QCameraParameters.cpp:2183:        property_get("persist.vendor.camera.led.on.period", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:2225:        property_get("persist.vendor.camera.retro.number", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:2583:    property_get("persist.vendor.camera.effect", prop, "none");
QCamera2/HAL/QCameraParameters.cpp:3040:    property_get("persist.vendor.camera.stats.debug.mask", value, "0");
QCamera2/HAL/QCameraParameters.cpp:3069:    property_get("persist.vendor.camera.stats.af.paaf", value, "1");
QCamera2/HAL/QCameraParameters.cpp:3315:        property_get("persist.vendor.camera.iso", iso_val, "");
QCamera2/HAL/QCameraParameters.cpp:3349:    property_get("persist.vendor.camera.continuous.iso", iso, "");
QCamera2/HAL/QCameraParameters.cpp:3398:        property_get("persist.vendor.camera.exposure.time", expTime, "");
QCamera2/HAL/QCameraParameters.cpp:3572:    property_get("persist.vendor.camera.auto.hdr.enable", prop, VALUE_DISABLE);
QCamera2/HAL/QCameraParameters.cpp:3883:        property_get("persist.vendor.capture.burst.exposures", prop, "");
QCamera2/HAL/QCameraParameters.cpp:4273:        property_get("persist.vendor.camera.rawzsl", raw_zsl_prop, "0");
QCamera2/HAL/QCameraParameters.cpp:4316:        property_get("persist.vendor.camera.rawzsl.capture", raw_capture_prop, "0");
QCamera2/HAL/QCameraParameters.cpp:4648:        property_get("persist.vendor.camera.dualfov.jpegnum", prop, "1");
QCamera2/HAL/QCameraParameters.cpp:4765:        property_get("persist.vendor.camera.no-display", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:4947:    property_get("persist.vendor.camera.tnr_cds", value, "0");
QCamera2/HAL/QCameraParameters.cpp:4985:        property_get("persist.vendor.camera.tnr.video", video_value, VALUE_OFF);
QCamera2/HAL/QCameraParameters.cpp:4994:        property_get("persist.vendor.camera.tnr.preview", preview_value, VALUE_OFF);
QCamera2/HAL/QCameraParameters.cpp:5004:        property_get("persist.vendor.camera.tnr.preview", preview_value, VALUE_OFF);
QCamera2/HAL/QCameraParameters.cpp:5014:    property_get("persist.vendor.camera.tnr.snapshot", value, VALUE_OFF);
QCamera2/HAL/QCameraParameters.cpp:5190:    property_get("persist.vendor.camera.rdi.mode", prop, "");
QCamera2/HAL/QCameraParameters.cpp:5220:    property_get("persist.vendor.camera.secure.mode", prop, "");
QCamera2/HAL/QCameraParameters.cpp:5426:        property_get("persist.vendor.camera.zsl.interval", prop, "1");
QCamera2/HAL/QCameraParameters.cpp:5436:        property_get("persist.vendor.camera.zsl.backlookcnt", prop, "2");
QCamera2/HAL/QCameraParameters.cpp:5450:        property_get("persist.vendor.camera.zsl.queuedepth", prop, "2");
QCamera2/HAL/QCameraParameters.cpp:5544:        property_get("persist.vendor.camera.snapshot.fd", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:5565:    property_get("persist.vendor.camera.mobicat", value, "0");
QCamera2/HAL/QCameraParameters.cpp:5920:    property_get("persist.vendor.camera.vfe1.reservedrdi", reserved_rdi, "-1");
QCamera2/HAL/QCameraParameters.cpp:6417:    property_get("persist.vendor.capture.burst.exposures", prop, "");
QCamera2/HAL/QCameraParameters.cpp:6609:    property_get("persist.vendor.camera.hdr.outcrop", value, VALUE_DISABLE);
QCamera2/HAL/QCameraParameters.cpp:6638:    property_get("persist.vendor.camera.zsl.mode", value, "0");
QCamera2/HAL/QCameraParameters.cpp:6984:    property_get("persist.vendor.camera.halpp", prop, "");
QCamera2/HAL/QCameraParameters.cpp:7227:    property_get("persist.vendor.debug.set.fixedfps", value, "0");
QCamera2/HAL/QCameraParameters.cpp:7668:            property_get("persist.vendor.camera.zzhdr.enable", zz_prop, "0");
QCamera2/HAL/QCameraParameters.cpp:7673:            property_get("persist.camera.3hdr.enable", exp3_hdr_prop, "0");
QCamera2/HAL/QCameraParameters.cpp:7718:            property_get("persist.vendor.camera.hdr.video", zz_prop, "0");
QCamera2/HAL/QCameraParameters.cpp:8615:    property_get("persist.vendor.camera.tintless", prop, VALUE_ENABLE);
QCamera2/HAL/QCameraParameters.cpp:8725:            property_get("persist.vendor.camera.video.CDS", video_prop, CDS_MODE_OFF);
QCamera2/HAL/QCameraParameters.cpp:8765:            property_get("persist.vendor.camera.CDS", prop, CDS_MODE_OFF);
QCamera2/HAL/QCameraParameters.cpp:8816:        property_get("persist.vendor.camera.initial.exp.val", prop, "");
QCamera2/HAL/QCameraParameters.cpp:8876:        property_get("persist.vendor.camera.instant.capture", prop, KEY_QC_INSTANT_CAPTURE_DISABLE);
QCamera2/HAL/QCameraParameters.cpp:8910:        property_get("persist.vendor.camera.ae.capture.bound", prop, "7");
QCamera2/HAL/QCameraParameters.cpp:8964:            property_get("persist.vendor.camera.instant.aec", prop, KEY_QC_INSTANT_AEC_DISABLE);
QCamera2/HAL/QCameraParameters.cpp:8996:        property_get("persist.vendor.camera.ae.instant.bound", prop, "7");
QCamera2/HAL/QCameraParameters.cpp:9069:    property_get("persist.vendor.camera.ois.mode", ois_prop, "1");
QCamera2/HAL/QCameraParameters.cpp:9418:    property_get("persist.vendor.camera.set.afd", prop, "3");
QCamera2/HAL/QCameraParameters.cpp:9658:    property_get("persist.vendor.camera.zzhdr.enable", value, "0");
QCamera2/HAL/QCameraParameters.cpp:10420:        property_get("persist.vendor.camera.mem.usecache", prop, "");
QCamera2/HAL/QCameraParameters.cpp:10586:        property_get("persist.vendor.denoise.process.plates", prop, "");
QCamera2/HAL/QCameraParameters.cpp:10588:        property_get("persist.vendor.tnr.process.plates", prop, "");
QCamera2/HAL/QCameraParameters.cpp:10836:          property_get("persist.vendor.camera.raw.subformat", raw_sub_format, "1");
QCamera2/HAL/QCameraParameters.cpp:10934:            property_get("persist.vendor.camera.snap.format", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:10982:            property_get("persist.vendor.camera.raw.format", raw_format, "17");
QCamera2/HAL/QCameraParameters.cpp:11659:        property_get("persist.vendor.camera.is.buffer_delay", prop, "15");
QCamera2/HAL/QCameraParameters.cpp:11774:    property_get("persist.vendor.camera.exif.rotation", exifRotation, "off");
QCamera2/HAL/QCameraParameters.cpp:11780:    property_get("persist.vendor.camera.lib2d.rotation", exifRotation, "off");
QCamera2/HAL/QCameraParameters.cpp:12923:        property_get("persist.vendor.camera.dcrf.enable", prop, "1");
QCamera2/HAL/QCameraParameters.cpp:13029:    property_get("persist.vendor.camera.stats.test.2outs", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:13346:    property_get("persist.vendor.camera.syncDCParams.en", prop, "1");
QCamera2/HAL/QCameraParameters.cpp:14175:    property_get("persist.vendor.camera.eztune.enable", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:14250:        property_get("persist.vendor.camera.is_type", value, "4");
QCamera2/HAL/QCameraParameters.cpp:14257:        property_get("persist.vendor.camera.is_type_preview", value, "4");
QCamera2/HAL/QCameraParameters.cpp:14262:        property_get("persist.vendor.camera.is_type", value, "2");
QCamera2/HAL/QCameraParameters.cpp:14269:        property_get("persist.vendor.camera.is_type_preview", value, "2");
QCamera2/HAL/QCameraParameters.cpp:14546:    property_get("persist.vendor.camera.raw_yuv", value, "0");
QCamera2/HAL/QCameraParameters.cpp:15163:   property_get("persist.vendor.camera.preview.seemore", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:15234:    property_get("persist.vendor.camera.raw_yuv", value, "0");
QCamera2/HAL/QCameraParameters.cpp:15236:    property_get("persist.vendor.camera.offlineraw", value, "0");
QCamera2/HAL/QCameraParameters.cpp:15415:        property_get("persist.vendor.camera.sat.enable", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:15434:        property_get("persist.vendor.camera.sac.enable", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:15450:        property_get("persist.vendor.camera.rtbdm.enable", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:15463:        property_get("persist.vendor.camera.rtb.enable", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:15482:        property_get("persist.vendor.camera.fovc.enable", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:15563:    property_get("persist.vendor.camera.multi_pass", value, "0");
QCamera2/HAL/QCameraParameters.cpp:15620:    property_get("debug.gralloc.gfx_ubwc_disable", value, "0");
QCamera2/HAL/QCameraParameters.cpp:15635:    property_get("persist.vendor.camera.eztune.enable", value, "0");
QCamera2/HAL/QCameraParameters.cpp:15671:    property_get("persist.vendor.camera.pp_scaling", value, "0");
QCamera2/HAL/QCameraParameters.cpp:15698:    property_get("persist.vendor.camera.llnoise", value, "0");
QCamera2/HAL/QCameraParameters.cpp:15722:    property_get("persist.vendor.camera.batchcount", value, "0");
QCamera2/HAL/QCameraParameters.cpp:15779:    property_get("persist.vendor.camera.video.batchsize", value, "0");
QCamera2/HAL/QCameraParameters.cpp:16070:    property_get("persist.vendor.camera.longshot.stages", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:16129:    property_get("persist.vendor.camera.fb.enable", prop, 0);
QCamera2/HAL/QCameraParameters.cpp:16157:    property_get("persist.vendor.camera.llc", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:16182:    property_get("persist.vendor.camera.fdvideo", value, "0");
QCamera2/HAL/QCameraParameters.cpp:16203:    property_get("persist.vendor.camera.imglib.of1.skip", value, "0");
QCamera2/HAL/QCameraParameters.cpp:16228:    property_get("persist.vendor.camera.manual.capture", value, "0");
QCamera2/HAL/QCameraParameters.cpp:16319:    property_get("persist.vendor.camera.dualled_calib", prop, "");
QCamera2/HAL/QCameraParameters.cpp:16614:    property_get("persist.vendor.camera.dt", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:16622:    property_get("persist.vendor.camera.vc", prop, "-1");
QCamera2/HAL/QCameraParameters.cpp:16650:   property_get("persist.vendor.camera.linkpreview", prop, "1");
QCamera2/HAL/QCameraParameters.cpp:16851:    property_get("persist.vendor.camera.raw_yuv", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:16860:    property_get("persist.vendor.dualcam.defer.enable", prop, "1");
QCamera2/HAL/QCameraParameters.cpp:16904:        property_get("persist.vendor.dualcam.lpm.main", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:16908:        property_get("persist.vendor.dualcam.lpm.aux", prop, "0");
QCamera2/HAL/QCameraParameters.cpp:16951:    property_get("persist.vendor.dualcam.lpm.enable", prop, "1");
QCamera2/HAL/QCameraPostProc.cpp:332:    property_get("persist.vendor.camera.longshot.save", prop, "0");
QCamera2/HAL/QCameraPostProc.cpp:530:    property_get("persist.vendor.camera.jpeg_burst", prop, "0");
QCamera2/HAL/QCameraPostProc.cpp:574:    property_get("persist.vendor.camera.tn.disable", prop, "0");
QCamera2/HAL/QCameraPostProc.cpp:1671:                property_get("persist.vendor.camera.dumpmetadata", value, "0");
QCamera2/HAL/QCameraPostProc.cpp:4189:        property_get("persist.vendor.camera.dualfov.jpegnum", prop, "1");
QCamera2/HAL/QCameraMuxer.cpp:157:    property_get("persist.vendor.camera.dual.camera.dump", prop, "0");
QCamera2/HAL/QCameraMuxer.cpp:1111:    property_get("persist.vendor.camera.dual.camera.mpo", prop, "1");
QCamera2/HAL/QCameraMuxer.cpp:1761:    property_get("persist.vendor.camera.aux.camera", prop, "0");
QCamera2/HAL/QCameraMuxer.cpp:1765:    property_get("persist.vendor.camera.auxcamera.swap", prop, "0");
QCamera2/HAL/QCameraMuxer.cpp:2115:    property_get("persist.vendor.camera.dc.frame.sync", prop, "1");
QCamera2/HAL/QCamera2HWICallbacks.cpp:170:    property_get("persist.vendor.camera.zsl_raw", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:237:    property_get("persist.vendor.camera.dumpmetadata", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:260:    property_get("persist.vendor.camera.zsl_matching", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:442:    property_get("persist.vendor.camera.dumpmetadata", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:1835:    property_get("persist.vendor.camera.dumpmetadata", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:1971:    property_get("persist.vendor.camera.dumpmetadata", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:2061:        property_get("persist.vendor.camera.preview_raw", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:2063:        property_get("persist.vendor.camera.video_raw", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:2111:    property_get("persist.vendor.camera.snapshot_raw", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:2920:    property_get("persist.vendor.camera.dumpimg", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:2984:    property_get("persist.vendor.camera.dumpmetadata", value, "0");
QCamera2/HAL/QCamera2HWICallbacks.cpp:3097:    property_get("persist.vendor.camera.dumpimg", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:1530:    property_get("persist.vendor.camera.fdleak.enable", prop, "0");
QCamera2/HAL/QCamera2HWI.cpp:1538:    property_get("persist.vendor.camera.memleak.enable", prop, "0");
QCamera2/HAL/QCamera2HWI.cpp:1902:    property_get("persist.vendor.camera.fdleak.enable", prop, "0");
QCamera2/HAL/QCamera2HWI.cpp:1910:    property_get("persist.vendor.camera.memleak.enable", prop, "0");
QCamera2/HAL/QCamera2HWI.cpp:2066:    property_get("service.bootanim.exit", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:2077:    property_get("persist.vendor.camera.time.monotonic", value, "1");
QCamera2/HAL/QCamera2HWI.cpp:2093:    property_get("persist.vendor.camera.depth.focus.cb", value, "1");
QCamera2/HAL/QCamera2HWI.cpp:2097:    property_get("persist.vendor.camera.cache.optimize", value, "1");
QCamera2/HAL/QCamera2HWI.cpp:2386:    property_get("service.bootanim.exit", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:2772:            property_get("persist.vendor.camera.preview_yuv", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:2827:        property_get("persist.vendor.camera.raw_yuv", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:2856:        property_get("persist.vendor.camera.preview_raw", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:2862:        property_get("persist.vendor.camera.video_raw", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:2893:                 property_get("vendor.vidc.enc.dcvs.extra-buff-count", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:3087:    property_get("persist.vendor.camera.mem.usepool", value, "1");
QCamera2/HAL/QCamera2HWI.cpp:3482:            property_get("persist.vendor.camera.raw_yuv", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:4949:    property_get("persist.vendor.camera.imglib.stillmore", prop, "0");
QCamera2/HAL/QCamera2HWI.cpp:5185:            property_get("persist.vendor.camera.dualfov.jpegnum", prop, "1");
QCamera2/HAL/QCamera2HWI.cpp:5989:        property_get("persist.vendor.camera.raw.format", raw_format, "17");
QCamera2/HAL/QCamera2HWI.cpp:8168:    property_get("persist.vendor.camera.raw_yuv", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:8509:    property_get("persist.vendor.camera.raw_yuv", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:8624:    property_get("persist.vendor.camera.raw_yuv", value, "0");
QCamera2/HAL/QCamera2HWI.cpp:10368:    property_get("persist.vendor.camera.feature.cac", prop, "0");
QCamera2/HAL/QCamera2HWI.cpp:10408:    property_get("persist.vendor.camera.feature.restart", prop, "0");
QCamera2/HAL/QCamera2HWI.cpp:10671:    if (property_get("persist.vendor.sys.exif.make", value, "") > 0 ||
QCamera2/HAL/QCamera2HWI.cpp:10672:            property_get("ro.product.manufacturer", value, "QCOM-AA") > 0) {
QCamera2/HAL/QCamera2HWI.cpp:10679:    if (property_get("persist.vendor.sys.exif.model", value, "") > 0 ||
QCamera2/HAL/QCamera2HWI.cpp:10680:            property_get("ro.product.model", value, "QCAM-AA") > 0) {
QCamera2/HAL/QCamera2HWI.cpp:10687:    if (property_get("ro.build.description", value, "QCAM-AA") > 0) {
QCamera2/HAL/QCamera2HWI.cpp:10777:    property_get("persist.vendor.camera.feature.shutter", prop, "0");
QCamera2/HAL/QCamera2HWI.cpp:11720:    property_get("persist.vendor.camera.preview.sync_cb", value, "1");
QCamera2/HAL/QCamera2HWI.cpp:11786:    property_get("persist.vendor.camera.kpi.debug", prop, "0");
QCamera2/HAL/QCamera2HWI.cpp:11886:    property_get("vendor.camera.lowpower.record.enable", prop, "0");
QCamera2/HAL/test/qcamera_test.cpp:1904:            property_get("persist.vendor.camera.rdimode", value, "0");




>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


